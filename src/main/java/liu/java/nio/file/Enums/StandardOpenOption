-------------------------------StandardOpenOption-----------------------------------------------------------------------------------------------------------------------
StandardOpenOption：标准打开选项。【since 1.7】
	定义标准打开选项。
	
		
	枚举定义	：public enum StandardOpenOption extends Enum<StandardOpenOption> implements OpenOption
	语法糖	：enum StandardOpenOption implements OpenOption
	实现接口	：Serializable, Comparable<StandardOpenOption>, OpenOption
------------------------------------------------------------------------------------------------------------------------------------------------------		
Enum Constant Summary（枚举常量概要）：
	APPEND
		如果打开文件进行WRITE访问，则字节将写入文件的结尾而不是开头。
		如果文件是为写访问而被其他程序打开的，那么如果写入文件的结尾是原子的，那么它是特定于文件系统的。
	CREATE
		如果新文件不存在，则创建新文件。如果还设置了CREATE_NEW选项，则忽略此选项。对于其他文件系统操作，检查文件是否存在以及是否创建了不存在的文件是原子的。
	CREATE_NEW
		创建新文件，如果该文件已存在则失败。对于其他文件系统操作，检查文件是否存在以及是否创建了不存在的文件是原子的。
	DELETE_ON_CLOSE
		关闭时删除。当存在此选项时，实现将尽最大努力在使用适当的close方法关闭时删除文件。如果没有调用close方法，那么当Java虚拟机终止时（通常是由Java语言规范定义的，或者在可能的情况下，异常地），尽力尝试删除文件。此选项主要用于与仅由Java虚拟机的单个实例使用的工作文件一起使用。不建议在打开其他实体同时打开的文件时使用此选项。删除文件的时间和方式的许多细节都是特定于实现的，因此没有指定。尤其是，一个实现可能无法保证它在文件打开时删除被攻击者替换的预期文件。因此，安全敏感的应用程序在使用此选项时应该小心。
		出于安全原因，此选项可能意味着LinkOption.NOFOLLOW_LINKS选项。换句话说，如果在打开一个符号链接的现有文件时存在该选项，那么它可能会失败（通过抛出IOException）。
	DSYNC
		要求对文件内容的每个更新都同步写入底层存储设备。
	READ
		打开进行读取访问。
	SPARSE
		稀疏文件。与CREATE_NEW选项一起使用时，此选项提供新文件将稀疏的提示。如果文件系统不支持创建稀疏文件，则忽略该选项。
	SYNC
		要求对文件内容或元数据的每次更新都同步写入底层存储设备。
	TRUNCATE_EXISTING
		如果该文件已存在，并且已打开以进行WRITE访问，则其长度将被截断为0。如果只为READ访问而打开文件，则忽略此选项。
	WRITE
		打开进行写入访问。
	
	
		
Method Summary（方法概要）：
	valueOf(String name):static StandardOpenOption 
		name - 要返回的枚举常量的名称。
		返回具有指定名称的此类型的枚举常量。字符串必须与用于在此类型中声明枚举常量的标识符完全匹配。（不允许使用外部空白字符。）
		返回具有指定名称的枚举常量
		【Throws】：
			IllegalArgumentException 如果此枚举类型没有具有指定名称的常量
			NullPointerException 如果参数为null
	values():static StandardOpenOption[] 
		返回一个数组，该数组包含此枚举类型的常量，按照其声明顺序排序。此方法可用于对常量进行迭代，如下所示：
			for (StandardOpenOption c : StandardOpenOption.values())
    			System.out.println(c);		
		
			    
		
------------------------------------------------------------------------------------------------------------------------------------------------------
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已被淘汰掉的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。
	

----------------------------------------LinkPermission--------------------------------------------------------------------------------------------------------------
LinkPermission：链接权限	【Since:1.7】
	链接创建操作的权限类。
	下表简要说明了权限允许的内容，并讨论了授予代码权限的风险。
	——————————————————————————————————————————————————————————————————————————————————————————————————————————————————
	 Permission Target Name				What the Permission Allows						Risks of Allowing this Permission
	 		目标权限名								允许权限											允许此权限的风险
	——————————————————————————————————————————————————————————————————————————————————————————————————————————————————
	 hard				能够将现有文件添加到目录中。这有时被称为创建链接或硬链接。		授予此许可时应格外小心。它允许链接到文件系统中的任何文件或目录，从而允许攻击者访问所有文件。
	 symbolic			创建符号链接的能力。								授予此权限时应格外小心。它允许链接到文件系统中的任何文件或目录，从而允许攻击者访问所有文件。
	——————————————————————————————————————————————————————————————————————————————————————————————————————————————————
	
	
	
	类定义	：public final class LinkPermission extends BasicPermission
	实现接口	：Serializable, Guard
------------------------------------------------------------------------------------------------------------------------------------------------------
Constructor Summary（构造器概要）：
	public LinkPermission(String name)
		name - 权限的名称。它必须是“hard”或“symbolic”。
		使用指定的名称构造LinkPermission。
		【Throws】：
			IllegalArgumentException 如果名称为空或无效。
	public LinkPermission(String name, String actions)
		name - 权限的名称。它必须是“hard”或“symbolic”。
		actions - 权限的操作；必须是空字符串或null。
		使用指定的名称构造LinkPermission。
		【Throws】：
			IllegalArgumentException 如果名称为空或无效，或者操作为non-empty字符串。
	
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	
	3、java8中nio直接缓冲区与非直接缓冲区的区别：
		非直接缓冲区：通过allocate方法分配缓冲区，将缓冲区建立在JVM的内存中。
		直接缓冲区：通过allocateDirect方法分配直接缓冲区，将缓冲区建立在物理内存中，可以提供更高效率。
		
		
		
		
		
		
		
		
		
----------------------------------------AbstractSelectionKey--------------------------------------------------------------------------------------------------------------
AbstractSelectionKey：抽象选择键 【Since:1.4】
	选择键的基本实现类。
	此类跟踪键的有效性并实现取消。
	
	类定义	：public abstract class AbstractSelectionKey extends SelectionKey
------------------------------------------------------------------------------------------------------------------------------------------------------
Constructor Summary（构造器概要）：
	protected AbstractSelectionKey()
		构造此类的新实例。
		
Method Summary（方法概要）：
	cancel():final void 
		△ 取消此键。
		如果该键尚未取消，则在同步该键集时，它将添加到其选择器的已取消键集。
	isValid():final boolean 
		△ 指示此键是否有效。
		键在创建时有效，并且在取消、关闭通道或关闭选择器之前保持有效。
		如果且仅当此键有效时返回true。
	
	
	
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	
	3、java8中nio直接缓冲区与非直接缓冲区的区别：
		非直接缓冲区：通过allocate方法分配缓冲区，将缓冲区建立在JVM的内存中。
		直接缓冲区：通过allocateDirect方法分配直接缓冲区，将缓冲区建立在物理内存中，可以提供更高效率。
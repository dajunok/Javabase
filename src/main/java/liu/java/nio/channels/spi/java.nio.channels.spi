------------------------------------------Package java.nio.channels.spi--------------------------------------------------------------------------------------------------------------
											【Since 1.4】
Package Description（包描述说明）：
	java.nio.channels包的服务提供程序类。
	只有定义新选择器提供程序或异步通道提供程序的开发人员才需要直接使用此包。
	除非另有说明，否则在该包中的任何类或接口传递一个null参数到构造函数或方法将导致引发一个NullPointerException异常。

Class Summary(类概要)
	AbstractInterruptibleChannel
	AbstractSelectableChannel
	AbstractSelectionKey
	AbstractSelector
	AsynchronousChannelProvider
	SelectorProvider	



------------------------------------------------------------------------------------------------------------------------------------------------------
附录：
	1、I/O多路复用：阻塞式I/O和I/O复用，两个阶段都阻塞，那区别在哪里呢？就在于第三节讲述的Selector，虽然第一阶段都是阻塞，但是阻塞式I/O如果要接收更多的连接，就必须创建更多的线程。I/O复用模式下在第一个阶段大量的连接统统都可以过来直接注册到Selector复用器上面，同时只要单个或者少量的线程来循环处理这些连接事件就可以了，一旦达到“就绪”的条件，就可以立即执行真正的I/O操作。这就是I/O复用与传统的阻塞式I/O最大的不同。也正是I/O复用的精髓所在。
	        当服务程序需要承载大量TCP链接的时候，比如我们的消息推送系统，IM通讯，web聊天等等，在我们已经理解Selector原理的情况下，知道使用I/O复用可以用少量的线程处理大量的链接。I/O多路复用技术以事件驱动编程为基础。它运行在单一进程上下文中，因此每个逻辑流都能访问该进程的全部地址空间，这样在流之间共享数据变得很容易。

















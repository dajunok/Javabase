-----------------------------------------WritableByteChannel-----------------------------------------------------------------------------------------------------------------------------		
WritableByteChannel：可写入字节通道 【Since:1.4】
	可以写入字节的通道。
	在任意给定时间，可写通道上的一个写入操作可能正在进行中。如果一个线程在一个通道上启动一个写操作，那么任何其他试图启动另一个写操作的线程都将阻塞，直到第一个操作完成。其他类型的I/O操作是否可以与写操作同时进行取决于通道的类型。

	接口定义	：public interface WritableByteChannel extends Channel
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	write(ByteBuffer src):int 
		src - 从中检索字节的缓冲区。
		从给定缓冲区向此通道写入一个字节序列。
		尝试向通道中写入最多r个字节，其中r是调用此方法时缓冲区中剩余的字节数，即src.remaining()。
		假设写入长度为n的字节序列，其中0<=n<=r。此字节序列将从索引p开始的缓冲区传输，其中p是调用此方法时缓冲区的位置；最后写入的字节的索引将是p+n-1。返回时，缓冲区的位置将等于p+n；其限制（limit）将不会改变。
		除非另有规定，写入操作只有在写入所有r请求的字节之后才会返回。某些类型的通道，取决于它们的状态，可能只写一些字节，或者可能根本不写。例如，处于非阻塞模式的套接字通道无法写入比套接字输出缓冲区中的空闲字节更多的字节。
		可以随时调用此方法。但是，如果另一个线程已经在这个通道上启动了一个写操作，那么这个方法的调用将被阻塞，直到第一个操作完成。
		返回写入的字节数，可能为零。
		【Throws】：
			NonWritableChannelException 如果没有打开此频道进行写入
			ClosedChannelException 如果该通道关闭
			AsynchronousCloseException 如果另一个线程在写入操作正在进行中关闭此通道。
			ClosedByInterruptException 如果另一个线程在写操作进行时中断当前线程，从而关闭通道并设置当前线程的中断状态。
			IOException 如果发生其他I/O错误。
		
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	
		
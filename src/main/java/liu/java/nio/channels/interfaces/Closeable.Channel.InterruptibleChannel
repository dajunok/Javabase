-----------------------------------------InterruptibleChannel-----------------------------------------------------------------------------------------------------------------------------		
InterruptibleChannel：可中断通道 【Since:1.4】
	可以异步关闭和中断的通道。
	实现此接口的通道是异步关闭的：如果在可中断通道上的I/O操作中阻塞了一个线程，则另一个线程可能会调用通道的关闭方法。这将导致被阻塞的线程接收AsynchronousCloseException异常。
	实现这个接口的通道也是可中断的：如果一个线程在可中断通道上的I/O操作中被阻塞，那么另一个线程可以调用被阻塞线程的中断方法。这将导致通道关闭，阻塞的线程接收ClosedByInterruptException异常，并设置阻塞的线程的中断状态。
	如果一个线程的中断状态已经设置，并且它在一个通道上调用一个阻塞I/O操作，那么该通道将关闭，线程将立即接收一个ClosedByInterruptException；它的中断状态将保持设置状态。
	一个通道支持异步关闭和中断，前提是，它实现了这个接口。如有必要，可以在运行时通过instanceof运算符对其进行测试。
	

	接口定义	：public interface InterruptibleChannel extends Channel
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	close():void 
		关闭此通道。	
		当前在此通道上的I/O操作中阻塞的任何线程都将收到AsynchronousCloseException异常。
		否则，此方法的行为与通道接口指定的行为完全相同。
		【Throws】：
			IOException 如果发生I/O错误
		
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	
	
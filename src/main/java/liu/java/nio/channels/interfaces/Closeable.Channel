-----------------------------------------Channel-----------------------------------------------------------------------------------------------------------------------------		
Channel：通道 【Since:1.4】
	I/O操作的连接。
	通道表示与一个实体（如硬件设备、文件、网络套接字（socket）或程序组件）的开放连接，该实体能够执行一个或多个不同的I/O操作，例如读取或写入。
	通道打开或关闭。一个通道在创建时是打开的，一旦关闭，它就保持关闭状态。一旦通道关闭，对其调用I/O操作的任何尝试都将导致引发ClosedChannelException异常。通道是否打开可以通过调用其isOpen方法进行测试。
	通常，通道是为了安全地进行多线程访问，如扩展和实现该接口的接口和类的规范中所述。
	

	接口定义	：public interface Channel extends Closeable
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	close():void 
		△ 关闭此通道。
		通道关闭后，进一步尝试对其调用I/O操作将导致引发ClosedChannelException异常。
		如果此通道已关闭，则调用此方法无效。
		可以随时调用此方法。但是，如果其他线程已经调用了它，那么另一个调用将阻塞，直到第一个调用完成，之后它将返回而不起作用。
		【Throws】：
			IOException 如果发生I/O错误。
	isOpen():boolean 
		指示此通道是否打开。
		如果且仅当此通道打开时返回true。
		

		
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	
		
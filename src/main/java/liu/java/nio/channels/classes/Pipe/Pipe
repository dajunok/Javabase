----------------------------------------Pipe--------------------------------------------------------------------------------------------------------------
Pipe：管道 【Since:1.4】
	实现单向管道的一对通道。
	管道由一对通道组成：一个可写的接收器通道和一个可读的源通道。一旦一些字节被写入接收通道，它们就可以按照写入顺序从源通道中正确读取。
	在另一个线程从管道中读取这些字节或某些以前写入的字节之前，向管道中写入字节的线程是否会阻塞，这取决于系统，因此未指定。许多管道实现将在接收器和源通道之间缓冲到一定数量的字节，但不应假定这样的缓冲。
	
	
	类定义	：public abstract class Pipe
	嵌套类	：SinkChannel, SourceChannel
------------------------------------------------------------------------------------------------------------------------------------------------------
Constructor Summary（构造器概要）：
	protected Pipe()
		初始化此类的新实例。	
		
Method Summary（方法概要）：
	open():static Pipe 
		打开管道。
		新管道是通过调用系统范围的默认SelectorProvider对象的openPipe方法创建的。
		返回新管道。
		【Throws】：
			IOException 如果发生I/O错误。
	sink():abstract SinkChannel 
		★ 返回此管道的接收器通道。
	source():abstract SourceChannel 
		★ 返回此管道的源通道。
	
	
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	
	3、java8中nio直接缓冲区与非直接缓冲区的区别：
		非直接缓冲区：通过allocate方法分配缓冲区，将缓冲区建立在JVM的内存中。
		直接缓冲区：通过allocateDirect方法分配直接缓冲区，将缓冲区建立在物理内存中，可以提供更高效率。
		



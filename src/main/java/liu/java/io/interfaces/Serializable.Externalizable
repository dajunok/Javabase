-----------------------------------------Externalizable-----------------------------------------------------------------------------------------------------------------------------		
Externalizable：可外部化  【Since:1.1】
	在序列化流中只写入Externalizable实例的类的标识，该类负责保存和还原其实例的内容。Externalizable接口的writeExternal和readExternal方法由类实现，以使类完全控制对象及其父类型的流的格式和内容。这些方法必须与父类型显式协调才能保存其状态。这些方法取代了writeObject和readObject方法的自定义实现。
	对象序列化使用Serializable和Externalizable的接口。对象持久性机制也可以使用它们。要存储的每个对象都要测试Externalizable接口。如果对象支持Externalizable，则调用writeExternal方法。如果对象不支持Externalizable并且实现了Serializable，则使用ObjectOutputStream保存该对象。
	当Externalizable的对象被重构时，使用公共的无参数构造函数创建一个实例，然后调用readExternal方法。通过从ObjectInputStream中读取可序列化对象，可以还原这些对象。
	Externalizable实例可以通过Serializable接口中记录的writeReplace和readResolve方法指定替换对象。
	
	

	接口定义	：public interface Externalizable extends java.io.Serializable
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Method Summary（方法概要）
	readExternal(ObjectInput in):void 
		in - 从中读取数据以还原对象的流
		对象实现了readExternal方法，通过调用基元类型的DataInput方法和对象、字符串和数组的readObject方法来还原其内容。readExternal方法必须以与writeExternal写入的值相同的顺序和类型读取值。
		【Throws】：
			IOException - 如果发生I/O错误。
			ClassNotFoundException 如果找不到要还原的对象的类。
	writeExternal(ObjectOutput out):void 
		out - 将对象写入的流
		对象实现了writeExternal方法，通过为其原始值调用DataOutput方法或为对象、字符串和数组调用ObjectOutput的writeObject方法来保存其内容。
		【Throws】：
			IOException 包括可能发生的任何I/O异常。
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	


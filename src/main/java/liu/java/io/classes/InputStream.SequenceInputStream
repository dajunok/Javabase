----------------------------------------SequenceInputStream--------------------------------------------------------------------------------------------------------------
SequenceInputStream：顺序输入流	【Since:JDK1.0】
	SequenceInputStream表示其他输入流的逻辑串联。它从有序的输入流集合开始，从第一个流读取，直到到达文件结尾，然后从第二个流读取，依此类推，直到在所包含的最后一个输入流上到达文件结尾。
	
	
	
	类定义	：public class SequenceInputStream extends InputStream
	实现接口	：AutoCloseable, Closeable
------------------------------------------------------------------------------------------------------------------------------------------------------
Constructor Summary（构造器概要）：
	public SequenceInputStream(InputStream s1, InputStream s2)
		s1 -  要读取的第一个输入流。
		s2 - 要读取的第二个输入流。
		通过记住将按顺序读取的两个参数（第一个参数是s1，然后是s2），初始化新创建的SequenceInputStream，以提供要从此SequenceInputStream读取的字节。
	public SequenceInputStream(Enumeration<? extends InputStream> e)
		e - 输入流的枚举。
		通过记住参数初始化新创建的SequenceInputStream，该参数必须是一个枚举，它生成运行时类型为InputStream的对象。枚举生成的输入流将被读取，以便提供要从此SequenceInputStream中读取的字节。枚举中的每个输入流用完后，通过调用其close方法将其关闭。

Method Summary（方法概要）：
	available():int 
		△ 返回可以从当前底层输入流中读取（或跳过）的字节数的估计值，而不受当前基础输入流下一次方法调用的阻塞。下一次调用可能是同一个线程或另一个线程。单个读取或跳过这么多字节不会阻塞，但可能会读取或跳过更少的字节。
		此方法只调用当前底层输入流的available并返回结果。
		返回在不阻塞的情况下从当前底层输入流读取（或跳过）的字节数的估计值，或者如果通过调用其close()方法关闭了此输入流，则返回0。
		【Throws:】：
			IOException 如果发生I/O错误。
	close():void 
		△ 关闭此输入流并释放与该流关联的任何系统资源。关闭的SequenceInputStream无法执行输入操作，无法重新打开。
		如果此流是从枚举创建的，则从枚举请求所有剩余元素，并在close方法返回之前关闭。
		【Throws:】：
			IOException 如果发生I/O错误。
	read():int 
		△ 从这个输入流中读取数据的下一个字节。字节作为int返回，返回范围为0到255。如果由于到达流的结尾而没有字节可用，则返回值-1。此方法将一直阻塞，直到输入数据可用、检测到流的结尾或引发异常为止。
		此方法尝试从当前子流中读取一个字符。如果到达流的末尾，则调用当前子流的close方法并开始从下一个子流读取。
		返回数据的下一个字节，如果到达流的末尾，则返回-1。
		【Throws:】：
			IOException 如果发生I/O错误。
	read(byte b[], int off, int len):int 
		b - 读取数据的缓冲区。
		off - 数组b中写入数据的起始偏移量。
		len - 读取的最大字节数。	
		△ 将此输入流中最多len个字节的数据读取到一个字节数组中。如果len不为零，方法将一直阻塞，直到至少有1个字节的输入可用；否则，将不读取任何字节，并返回0。
		SequenceInputStream的读取方法尝试从当前子流读取数据。如果由于子流已到达流的末尾而无法读取任何字符，则调用当前子流的Close方法并开始从下一个子流读取。
		返回读取的int类型字节数。
		【Throws】：
			NullPointerException 如果b为null。
			IndexOutOfBoundsException 如果off为负，len为负，或者len大于b.length-off。
			IOException 如果发生I/O错误。
			
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	













		
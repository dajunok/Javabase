----------------------------------------FileInputStream--------------------------------------------------------------------------------------------------------------
FileInputStream：文件输入流	【Since:JDK1.0】
	FileInputStream从文件系统中的文件获取输入字节。哪些文件可用取决于主机环境。
	FileInputStream用于读取原始字节流，如图像数据。要读取字符流，请考虑使用FileReader。
	
	
	类定义	：public class FileInputStream extends InputStream
	实现接口	：AutoCloseable, Closeable
------------------------------------------------------------------------------------------------------------------------------------------------------
Constructor Summary（构造器概要）：
	public FileInputStream(File file)
		file - 要打开以供读取的文件。
		通过打开与实际文件（文件系统中由File对象文件命名的文件）的连接来创建FileInputStream。将创建一个新的FileDescriptor对象来表示此文件连接。
		首先，如果存在安全管理器，则调用其checkRead方法，并使用文件参数表示的路径作为其参数。
		如果命名文件不存在，是目录而不是常规文件，或者由于其他原因无法打开进行读取，则会引发FileNotFoundException异常。
		【Throws】：
			FileNotFoundException 如果文件不存在，是目录而不是常规文件，或者由于其他原因无法打开进行读取。
			SecurityException  如果安全管理器存在，并且其checkRead方法拒绝对文件的读取访问。
	public FileInputStream(FileDescriptor fdObj)
		fdObj - 要打开以供读取的文件描述符。
		使用文件描述符fdObj创建FileInputStream，该描述符表示与文件系统中实际文件的现有连接。
		如果存在安全管理器，则使用文件描述符fdObj作为参数调用其checkRead方法，以查看是否可以读取文件描述符。如果拒绝对文件描述符的读取访问，则引发SecurityException异常。
		如果fdObj为null，则引发NullPointerException异常。
		【Throws】：
			SecurityException 如果安全管理器存在，并且其checkRead方法拒绝对文件描述符的读取访问。 
	public FileInputStream(String name)
		name - 依赖于系统的文件名。
		通过打开与实际文件的连接来创建FileInputStream，该文件由文件系统中的路径名命名。将创建一个新的FileDescriptor（文件描述符）对象来表示此文件连接。
		首先，如果有一个安全管理器，则使用name参数作为其参数调用其checkRead方法。
		如果命名文件不存在，是目录而不是常规文件，或者由于其他原因无法打开进行读取，则会引发FileNotFoundException异常。
		【Throws】：
			FileNotFoundException 如果文件不存在，是目录而不是常规文件，或者由于其他原因无法打开进行读取。
			SecurityException 如果安全管理器存在，并且其checkRead方法拒绝对文件的读取访问。 
		
	
Method Summary（方法概要）：
	available():int 
		△ 返回可以从此输入流读取（或跳过）的剩余字节数的估计值，而不受此输入流下一次方法调用的阻塞。当文件位置超过EOF时返回0。下一次调用可能是同一个线程或另一个线程。单个读取或跳过这么多字节不会阻塞，但可能会读取或跳过更少的字节。
		在某些情况下，非阻塞读取（或跳过）可能在速度较慢时被阻塞，例如，在速度较慢的网络上读取大型文件时。
		返回估计可以从此输入流中读取（或跳过）而不阻塞的剩余字节数。
		【Throws】：
			IOException 如果此文件输入流已通过调用close关闭或发生I/O错误。
	close():void 
		△ 关闭此文件输入流并释放与该流关联的任何系统资源。
		如果此流具有关联的通道，则该通道也将关闭。
		【Throws】：
			IOException 如果发生I/O错误。
	finalize():protected void 
		确保在不再引用此文件输入流时调用它的Close方法。
		【Throws】：
			IOException 如果发生I/O错误。
	getChannel():FileChannel 
		返回与此文件输入流关联的唯一FileChannel对象。
		返回通道的初始位置等于到目前为止从文件中读取的字节数。从这个流中读取字节将增加通道的位置。通过显式或读取改变通道的位置，将更改此流的文件位置。
		返回与此文件输入流关联的文件通道。
	getFD():final FileDescriptor 
		返回FileDescriptor对象，该对象表示与此FileInputStream使用的文件系统中的实际文件的连接。
		返回与此流关联的文件描述符对象。
		【Throws】：
			IOException 如果发生I/O错误。
	read():int 
		从这个输入流中读取一个字节的数据。如果没有可用的输入，则此方法将阻塞。
		返回数据的下一个字节，如果到达文件结尾，则返回-1。
		【Throws】：
			IOException 如果发生I/O错误。
	read(byte b[]):int
		b - 读取数据的缓冲区。
		从这个输入流中最多读取b.length字节的数据到字节数组中。此方法将一直阻塞，直到有一些输入可用。
		返回读取到缓冲区的总字节数，如果由于已到达文件结尾而没有更多数据，则返回-1。
		【Throws】：
			IOException 如果发生I/O错误。
	read(byte b[], int off, int len):int
		b - 读取数据的缓冲区。
		off - 目标数组b中的起始偏移量。
		len - 要读取的最大字节数。		
		将此输入流中最多len个字节的数据读取到一个字节数组中。如果len不是零，则方法将一直阻塞，直到某些输入可用；否则，将不读取任何字节，并返回0。
		返回读取到缓冲区的总字节数，如果由于已到达文件结尾而没有更多数据，则返回-1。
		【Throws】：
			IOException 如果发生I/O错误。
			NullPointerException 如果b为null。
			IndexOutOfBoundsException 如果off为负，len为负，或者len大于b.length-off。	
	skip(long n):long
		n - 要跳过的字节数。
		跳过并丢弃此输入流中的n字节数据。
		由于各种原因，skip方法可能会跳过一些较小的字节，可能是0。如果n为负，该方法将尝试向后跳。如果备份文件在其当前位置不支持向后跳过，则会引发IOException异常。将返回跳过的实际字节数。如果向前跳过，则返回正值。如果它向后跳，则返回负值。
		此方法可能会跳过比备份文件中剩余字节更多的字节。这不会产生异常，跳过的字节数可能包括一些超出备份文件EOF的字节数。跳过结尾后尝试从流中读取将导致-1指示文件结尾。
		返回跳过的实际字节数。
		【Throws】：
			IOException 如果n为负，如果流不支持查找（seek），或者发生I/O错误。
			
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	













		
----------------------------------------Console--------------------------------------------------------------------------------------------------------------
Console：控制台	【Since:1.6】
	方法访问与当前Java虚拟机相关联的基于字符的控制台设备（如果有的话）。
	虚拟机是否有控制台取决于底层平台以及调用虚拟机的方式。如果虚拟机从交互命令行启动，而不重定向标准输入和输出流，则其控制台将存在，并且通常连接到启动虚拟机的键盘和显示器。如果虚拟机是自动启动的，例如由后台作业调度程序启动，那么它通常没有控制台。
	如果这个虚拟机有一个控制台，那么它由这个类的唯一实例表示，可以通过调用System.console()方法来获得该实例。如果没有可用的控制台设备，那么对该方法的调用将返回null。
	读写操作是同步的，以保证关键操作的原子完成；因此，在多线程场景中，调用方法readLine()、readPassword()、format()、printf()以及reader()和writer()返回的对象上的读、格式化和写操作可能会阻塞。
	对reader()和writer()返回的对象调用close()不会关闭这些对象的底层流。
	当到达控制台输入流的末尾时，控制台读取方法返回null，例如在UNIX上键入control-D或在Windows上键入control-Z。如果以后在控制台的输入设备上输入其他字符，则后续的读取操作将成功。
	除非另有指定，否则将null参数传递给此类中的任何方法都将导致引发NullPointerException异常。
	安全说明：如果应用程序需要读取密码或其他安全数据，则应使用readPassword()或readPassword(String, Object...)并在处理后手动将返回的字符数组归零，以最小化内存中敏感数据的生存期。
		 Console cons;
		 char[] passwd;
		 if ((cons = System.console()) != null &&
		     (passwd = cons.readPassword("[%s]", "Password:")) != null) {
		     ...
		     java.util.Arrays.fill(passwd, ' ');
		 }	
	
	
	类定义	：public final class Console implements Flushable
	实现接口	：Flushable
------------------------------------------------------------------------------------------------------------------------------------------------------
Method Summary（方法概要）：
	flush():void 
		刷新控制台并强制立即写入任何缓冲输出。
	format(String fmt, Object ...args):Console 
		fmt - Format字符串语法中描述的格式字符串
		args - 格式字符串中格式说明符引用的参数。如果参数多于格式说明符，则忽略多余的参数。参数的数目是可变的，可以是零。最大数量的参数受Java Java虚拟机规范定义的Java阵列的最大尺寸的限制。空参数的行为取决于转换。
		使用指定的格式字符串和参数将格式化字符串写入此控制台的输出流。
		返回此控制台。
		【Throws】：
			IllegalFormatException 如果格式字符串包含非法语法、与给定参数不兼容的格式说明符、给定格式字符串的参数不足或其他非法条件。有关所有可能的格式错误的规范，请参阅格式化程序类规范的详细信息部分。
	printf(String format, Object ... args):Console 
		format - Format字符串语法中描述的格式字符串。
		args - 格式字符串中格式说明符引用的参数。如果参数多于格式说明符，则忽略多余的参数。参数的数目是可变的，可以是零。最大数量的参数受Java Java虚拟机规范定义的Java阵列的最大尺寸的限制。空参数的行为取决于转换。
		使用指定的格式字符串和参数将格式化字符串写入此控制台的输出流的方便方法。
		对con.printf(format, args)形式的此方法的调用与下面调用完全相同。
			con.format(format, args)
		【Throws】：
			IllegalFormatException 如果格式字符串包含非法语法、与给定参数不兼容的格式说明符、给定格式字符串的参数不足或其他非法条件。有关所有可能的格式错误的规范，请参阅格式化程序类规范的详细信息部分。
	reader():Reader 
		检索与此控制台关联的唯一阅读器对象。
		此方法用于复杂的应用程序，例如利用Scanner提供的丰富解析/扫描功能的Scanner对象：
			 Console con = System.console();
			 if (con != null) {
			     Scanner sc = new Scanner(con.reader());
			     ...
			 }	
		对于只需要面向线（line-oriented）阅读的简单应用程序，使用readLine(java.lang.String, java.lang.Object...)。	
		返回对象上的大容量读取操作read(char[])、read(char[], int, int)和read(java.nio.CharBuffer)不会在每次调用的行边界之外读取字符，即使目标缓冲区有空间容纳更多字符。如果在控制台的输入设备上未输入或未达到行边界，则读卡器的A4方法可能会阻塞。行边界被认为是换行符（“\n”）、回车符（“\r”）、紧跟换行符的回车符或流的结尾之一。
	readLine():String
		从控制台读取一行文本。 
		返回字符串，包含从控制台读取的行，不包括任何行终止字符，如果到达流的结尾，则返回null。
		【Throws】：
			IOError 如果发生I/O错误。
	readLine(String fmt, Object ... args):String 
		fmt - 格式字符串语法中描述的格式字符串。
		args - 格式字符串中格式说明符引用的参数。如果参数多于格式说明符，则忽略多余的参数。参数的最大数目受Java虚拟机规范定义的Java数组的最大尺寸的限制。	
		提供格式化提示，然后从控制台读取一行文本。
		返回一个字符串，包含从控制台读取的行，不包括任何行终止字符，如果已到达流的结尾，则为空。
		【Throws】：
			IllegalFormatException 如果格式字符串包含非法语法、与给定参数不兼容的格式说明符、给定格式字符串的参数不足或其他非法条件。有关所有可能的格式错误的规范，请参阅格式化程序（formatter）类规范的详细信息部分。
			IOError 如果发生I/O错误。		
	readPassword():char[] 
		返回在禁用回显（echo）的情况下从控制台读取口令或密码。
		返回包含从控制台读取的密码或密码的字符数组，不包括任何行终止字符，如果已到达流结尾，则为空。
		【Throws】：
			IOError 如果发生I/O错误。
	readPassword(String fmt, Object ... args):char[] 		
		fmt - 在提示文本的Format字符串语法中描述的格式字符串。
		args - 格式字符串中格式说明符引用的参数。如果参数多于格式说明符，则忽略多余的参数。参数的最大数目受Java虚拟机规范定义的Java阵列的最大尺寸的限制。	
		提供格式化提示，然后从控制台读取口令或密码，并禁用回显（echo）。
		返回包含从控制台读取的密码或密码的字符数组，不包括任何行终止字符，如果已到达流的结尾，则返回null。
		【Throws】：
			IllegalFormatException 如果格式字符串包含非法语法、与给定参数不兼容的格式说明符、给定格式字符串的参数不足或其他非法条件。有关所有可能的格式错误的规范，请参阅格式化程序（formatter）类规范的详细信息部分。
			IOError 如果发生I/O错误。
	writer():PrintWriter 
		检索与此控制台关联的唯一PrintWriter对象。
			
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	
	3、echo：回显。













		
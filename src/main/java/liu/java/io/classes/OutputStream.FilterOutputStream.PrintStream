----------------------------------------PrintStream--------------------------------------------------------------------------------------------------------------
PrintStream：打印输出流	【Since:JDK1.0】
	PrintStream为其他输出流添加了功能，即方便地打印各种数据值的表示形式。另外还提供了两个功能。与其他输出流不同，PrintStream从不抛出IOException异常；相反，异常情况只设置可以通过checkError方法测试的内部标志。或者，可以创建一个PrintStream以便自动刷新；这意味着在写入字节数组、调用println方法之一或写入换行符或字节（“\n”）后，将自动调用刷新方法。
	PrintStream打印的所有字符都使用平台的默认字符编码转换为字节。在需要写入字符而不是字节的情况下，应该使用PrintWriter类。
	
	
	类定义	：public class PrintStream extends FilterOutputStream implements Appendable, Closeable
	实现接口	：AutoCloseable, Closeable ,Flushable, Appendable
	直接子类	：LogStream
------------------------------------------------------------------------------------------------------------------------------------------------------
Field Summary（字段概要）
	FilterOutputStream.out : OutputStream
		要过滤的底层输出流。

Constructor Summary（构造器概要）：
	public PrintStream(File file)
		file - 用作此打印流目标的文件。如果文件存在，那么它将被截断为零大小；否则，将创建一个新文件。输出将写入文件并进行缓冲。
		使用指定的文件创建新的打印流，而不自动刷新行。这个方便的构造函数创建了必要的中间OutputStreamWriter，它将使用Java虚拟机的这个实例使用默认字符集来编码字符。
		【Throws】：
			FileNotFoundException 如果给定的文件对象不表示现有的可写常规文件，并且无法创建该名称的新常规文件，或者在打开或创建文件时发生其他错误。
			SecurityException 如果存在安全管理器，并且checkWrite(file.getPath())拒绝对该文件的写访问。
	public PrintStream(File file, String csn)
		file - 用作此打印流目标的文件。如果文件存在，那么它将被截断为零大小；否则，将创建一个新文件。输出将写入文件并进行缓冲。
		csn - 支持的字符集的名称
		使用指定的文件和字符集创建新的打印流，而不自动刷新行。这个方便的构造函数创建必要的中间OutputStreamWriter，它将使用提供的字符集对字符进行编码。
		【Throws】：
			FileNotFoundException 如果给定的文件对象不表示现有的可写常规文件，并且无法创建该名称的新常规文件，或者在打开或创建文件时发生其他错误。
			SecurityException 如果存在安全管理器，并且checkWrite(file.getPath())拒绝对该文件的写访问。
			UnsupportedEncodingException 如果不支持命名字符集。
	public PrintStream(OutputStream out)
		out - 将值和对象打印到的输出流。
		创建新的打印流。此流不会自动刷新。
	public PrintStream(OutputStream out, boolean autoFlush)
		out - 将值和对象打印到的输出流。
		autoFlush - 布尔值；如果为true，则每当写入字节数组、调用println方法之一或写入换行符或字节（“\n”）时，都将刷新输出缓冲区。
		创建新的打印流。
	public PrintStream(OutputStream out, boolean autoFlush, String encoding)
		out - 将值和对象打印到的输出流。
		autoFlush - 布尔值；如果为true，则每当写入字节数组、调用println方法之一或写入换行符或字节（“\n”）时，都将刷新输出缓冲区。
		encoding - 支持的字符编码的名称
		创建新的打印流。
		【Throws】：
			UnsupportedEncodingException 如果不支持命名编码。
	public PrintStream(String fileName)
		fileName - 用作此打印流目标的文件的名称。如果文件存在，那么它将被截断为零大小；否则，将创建一个新文件。输出将写入文件并进行缓冲。
		使用指定的文件名创建新的打印流，而不自动刷新行。这个方便的构造函数创建了必要的中间OutputStreamWriter，它将使用Java虚拟机的这个实例使用默认字符集来编码字符。
		【Throws】：
			FileNotFoundException 如果给定的文件对象不表示现有的可写常规文件，并且无法创建该名称的新常规文件，或者在打开或创建文件时发生其他错误。
			SecurityException 如果存在安全管理器，并且checkWrite(fileName)拒绝对该文件的写访问。
	public PrintStream(String fileName, String csn)
		fileName - 用作此打印流目标的文件的名称。如果文件存在，那么它将被截断为零大小；否则，将创建一个新文件。输出将写入文件并进行缓冲。
		csn - 支持的字符集的名称
		使用指定的文件名和字符集创建新的打印流，而不自动刷新行。这个方便的构造函数创建必要的中间OutputStreamWriter，它将使用提供的字符集对字符进行编码。
		【Throws】：
			FileNotFoundException 如果给定的文件对象不表示现有的可写常规文件，并且无法创建该名称的新常规文件，或者在打开或创建文件时发生其他错误。
			SecurityException 如果存在安全管理器，并且checkWrite(fileName)拒绝对该文件的写访问。
			UnsupportedEncodingException 如果不支持命名字符集。
	
Method Summary（方法概要）：
	append(char c):PrintStream 
		c - 要追加的16位字符
		△  将指定的字符追加到此输出流。
		对out.append(c)形式的此方法的调用与下面调用的行为完全等效：
			out.print(c) 
		返回此输出流。
	append(CharSequence csq):PrintStream
		csq - 要追加的字符序列。如果csq为null，那么将向该输出流追加四个字符“null”。 
		△ 将指定的字符序列追加到此输出流。
		对out.append(csq)形式的此方法的调用与下面调用的行为完全等效：
			out.print(csq.toString()) 
		根据字符序列csq的toString规范，不能追加整个序列。例如，调用字符缓冲区的toString方法将返回一个子序列，其内容取决于缓冲区的位置和限制。
		返回此输出流。
	append(CharSequence csq, int start, int end):PrintStream 
		csq - 要追加的字符序列。如果csq为null，那么将向该输出流追加四个字符“null”。 
		start - 子序列中第一个字符的索引 
		end - 子序列中最后一个字符后面的字符的索引
		将指定字符序列的子序列追加到此输出流。
		当csq不为空时，对out.append(csq, start, end)形式的此方法的调用与下面的调用的行为完全等效：
			out.print(csq.subSequence(start, end).toString()) 
		返回此输出流。
		【Throws】：
			IndexOutOfBoundsException 如果start或end为负，或者start大于end，或者end大于csq.length()。		
	checkError():boolean 
		刷新流并检查其错误状态。当底层输出流抛出InterruptedIOException以外的IOException时，以及当调用setError方法时，内部错误状态设置为true。如果底层输出流上的操作引发InterruptedIOException，则PrintStream通过执行以下操作将异常转换回中断：
			Thread.currentThread().interrupt();
		或等效操作。
		如果且仅当此流遇到InterruptedIOException以外的IOException，或已调用setError方法时返回true。
	clearError():protected void 
		清除此流的内部错误状态。
		此方法将导致随后对checkError()的调用返回false，直到另一个写入操作失败并调用setError()。
	close():void 
		△ 关闭流。这是通过刷新流，然后关闭底层输出流来完成的。
	flush():void 
		△ 刷新流。这是通过将任何缓冲输出字节写入底层输出流，然后刷新该流来完成的。
	format(String format, Object ... args):PrintStream 
		format - Format字符串语法中描述的格式字符串。
		args - 格式字符串中格式说明符引用的参数。如果参数多于格式说明符，则忽略多余的参数。参数的数目是可变的，可以是零。最大数量的参数受Java Java虚拟机规范定义的Java阵列的最大尺寸的限制。null参数的行为取决于转换。
		使用指定的格式字符串和参数将格式化字符串写入此输出流。
		始终使用的区域设置是由Locale.getDefault()返回的区域设置，而不考虑以前对此对象调用其他格式化方法的情况。
		返回此输出流。
		【Throws】：
			IllegalFormatException 如果格式字符串包含非法语法、与给定参数不兼容的格式说明符、给定格式字符串的参数不足或其他非法条件。有关所有可能的格式错误的规范，请参阅格式化程序类规范的详细信息部分。
			NullPointerException 如果format为null。
	format(Locale l, String format, Object ... args):PrintStream
		l - 格式化期间要应用的区域设置(locale)。如果l为null，则不应用本地化。
		format - Format字符串语法中描述的格式字符串。
		args - 格式字符串中格式说明符引用的参数。如果参数多于格式说明符，则忽略多余的参数。参数的数目是可变的，可以是零。最大数量的参数受Java Java虚拟机规范定义的Java阵列的最大尺寸的限制。null参数的行为取决于转换。
		使用指定的格式字符串和参数将格式化字符串写入此输出流。
		【Throws】：
			IllegalFormatException 如果格式字符串包含非法语法、与给定参数不兼容的格式说明符、给定格式字符串的参数不足或其他非法条件。有关所有可能的格式错误的规范，请参阅格式化程序类规范的详细信息部分。
			NullPointerException 如果format为null。
	print(boolean b):void 
		b - 要打印的boolean值。
		打印boolean值。由String.valueOf(boolean)生成的字符串根据平台的默认字符编码转换为字节，这些字节完全按照write(int)方法写入。
	print(char c):void 
		c - 要打印的char值。
		打印字符。根据平台的默认字符编码，字符被转换成一个或多个字节，并且这些字节完全按照write(int)方法的方式写入。
	print(char s[]):void 
		s - 要打印的字符数组
		打印字符数组。字符根据平台的默认字符编码转换为字节，这些字节完全按照write(int)方法写入。
		【Throws】：
			NullPointerException 如果s为null。
	print(double d):void 
		d - 要打印的double值。
		打印double精度浮点数。由String.valueOf(double)生成的字符串根据平台的默认字符编码转换为字节，这些字节完全按照write(int)方法写入。
	print(float f):void 
		f - 要打印的float值。
		打印float值。由String.valueOf(float)生成的字符串根据平台的默认字符编码转换为字节，这些字节完全按照write(int)方法写入。
	print(int i):void 
		i - 要打印的int值。
		打印整数。由String.valueOf(int)生成的字符串根据平台的默认字符编码转换为字节，这些字节完全按照write(int)方法写入。
	print(Object obj):void 
		obj - 要打印的对象。
		打印对象。由String.valueOf(Object)方法生成的字符串将根据平台的默认字符编码转换为字节，这些字节将完全按照write(int)方法的方式写入。
	print(String s):void 
		s - 要打印的字符串。
		打印字符串。如果参数为null，则打印字符串“null”。否则，字符串的字符将根据平台的默认字符编码转换为字节，并且这些字节将完全按照write(int)方法的方式写入。
	print(long l):void 
		l - 要打印的long值。
		打印一个long值。由String.valueOf(long)生成的字符串根据平台的默认字符编码转换为字节，这些字节完全按照write(int)方法写入。
	printf(String format, Object ... args):PrintStream 
		format - Format字符串语法中描述的格式字符串。
		args - 格式字符串中格式说明符引用的参数。如果参数多于格式说明符，则忽略多余的参数。参数的数目是可变的，可以是零。最大数量的参数受Java Java虚拟机规范定义的Java阵列的最大尺寸的限制。null参数的行为取决于转换。
		使用指定的格式字符串和参数将格式化字符串写入此输出流的方便方法。
		对out.printf(format, args)形式的此方法的调用与下面的调用的行为完全等效。
			out.format(format, args) 
		返回此输出流。
		【Throws】：
			IllegalFormatException 如果格式字符串包含非法语法、与给定参数不兼容的格式说明符、给定格式字符串的参数不足或其他非法条件。有关所有可能的格式错误的规范，请参阅格式化程序类规范的详细信息部分。
			NullPointerException - 如果format为null。
	printf(Locale l, String format, Object ... args):PrintStream 
		l - 格式化期间要应用的区域设置（locale）。如果l为null，则不应用本地化。
		format - Format字符串语法中描述的格式字符串。
		args - 格式字符串中格式说明符引用的参数。如果参数多于格式说明符，则忽略多余的参数。参数的数目是可变的，可以是零。最大数量的参数受Java Java虚拟机规范定义的Java阵列的最大尺寸的限制。null参数的行为取决于转换。
		使用指定的格式字符串和参数将格式化字符串写入此输出流的方便方法。
		对out.printf(l, format, args)形式的此方法的调用与下面的调用的行为完全等效。
			out.format(l, format, args) 
		返回此输出流。
		【Throws】：
			IllegalFormatException 如果格式字符串包含非法语法、与给定参数不兼容的格式说明符、给定格式字符串的参数不足或其他非法条件。有关所有可能的格式错误的规范，请参阅格式化程序类规范的详细信息部分。
			NullPointerException - 如果format为null。
	println():void 
		通过写入行分隔符字符串终止当前行。行分隔符字符串由系统属性line.separator定义，不一定是单个换行符（“\n”）。
	println(boolean x):void 
		x - 要打印的boolean值。
		打boolean值，然后终止行。此方法的行为就像它调用print(boolean)然后调用println()。
	println(char x):void 
		x - 要打印的char值。
		打char值，然后终止行。此方法的行为就像它调用print(char)然后调用println()。
	println(char x[]):void 
		x - 要打印的字符数组。
		打印字符数组，然后终止行。此方法的行为就像它调用print(char[])然后调用println()。
	println(double x):void 
		x - 要打印的double值。
		打印double值，然后终止行。此方法的行为就像它调用print(double)然后调用println()。
	println(float x):void 
		x - 要打印的float值。
		打印float值，然后终止行。此方法的行为就像它调用print(float)然后调用println()。
	println(int x):void 
		x - 要打印的int值。
		打印int值，然后终止行。此方法的行为就像它调用print(int)然后调用println()。
	println(Object x):void 
		x - 要打印的Object值。
		打印Object值，然后终止行。此方法首先调用string.valueof(x)以获取打印对象的字符串值，然后像调用print(string)，然后调用println()一样进行操作。
	println(String x):void 
		x - 要打印的String值。
		打印String值，然后终止行。此方法的行为就像它调用print(String)然后调用println()。
	println(long x):void 
		x - 要打印的long值。
		打印long值，然后终止行。此方法的行为就像它调用print(long)然后调用println()。
	setError():protected void 
		将流的错误状态设置为true。
		此方法将导致随后对checkError()的调用返回true，直到调用clearError()。
	write(byte buf[], int off, int len):void 
		buf - 字节数组。
		off - 开始接收字节的偏移量。
		len - 要写入的字节数。
		△ 将指定字节数组中从偏移量开始的len字节写入此流。如果启用自动刷新，则将调用flush方法。
		请注意，字节将按给定方式写入；要写入将根据平台的默认字符编码进行转换的字符，请使用print(char)或println(char)方法。
	write(int b):void 
		b - 要写入的字节。
		△ 将指定的字节写入此流。如果字节是换行符，并且启用了自动刷新，那么将调用flush方法。
		请注意，字节将按给定方式写入；要写入将根据平台的默认字符编码进行转换的字符，请使用print(char)或println(char)方法。
	
			
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	













		
----------------------------------------SerializablePermission--------------------------------------------------------------------------------------------------------------
SerializablePermission：序列化权限【Since:1.2】
	此类用于可序列化权限。SerializablePermission包含一个名称（也称为“目标名称”），但没有操作列表；您要么有命名权限，要么没有。
	目标名称是可序列化权限的名称（请参见下文）。
	下表列出了所有可能的SerializablePermission目标名称，并为每个名称提供了权限允许的描述和授予代码权限的风险讨论。
	—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
	权限目标名称						|	权限允许的内容										|							允许此权限的风险
	—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
	enableSubclassImplementation	|	ObjectOutputStream或ObjectinputStream的子类实现，	|	代码可以使用它以一种故意不正当的方式序列化或反序列化类。例如，在序列化过程中，
									|	分别重写对象的默认序列化或反序列化							|	恶意代码可以使用它以一种易于攻击者访问的方式有目的地存储机密的private字段数据。
									|													|	或者，在反序列化期间，它可以（例如）反序列化一个类，使其所有private字段都为零。
	—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
	enableSubstitution				|	在序列化或反序列化期间用一个对象替换另一个对象					|	这很危险，因为恶意代码可以用包含错误或恶意数据的对象替换实际对象。
	—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
	
	
	类定义	：public final class SerializablePermission extends BasicPermission
	实现接口	：Guard, Serializable
------------------------------------------------------------------------------------------------------------------------------------------------------
Constructor Summary（构造器概要）
	public SerializablePermission(String name)
		name - SerializablePermission的名称。
		使用指定的名称创建新的可序列化权限。名称是可序列化权限的符号名称，如“enableSubstitution”等。
		【Throws】：
			NullPointerException 如果name为null。
			IllegalArgumentException 如果name为空。.
	public SerializablePermission(String name, String actions)
		name - SerializablePermission的名称。
		actions - 当前未使用，必须设置为null
		【Throws】：
			NullPointerException 如果name为null。
			IllegalArgumentException 如果name为空。.

	
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	
	3、UNC：（Universal Naming Convention）路径：UNC指的是通用命名规则，也称通用命名规范、通用命名约定。UNC路径就是类似\\softer这样的形式的网络路径。
		格式：\\servername\sharename，其中servername是服务器名。sharename是共享资源的名称。UNC共享就是指网络硬盘的共享当访问softer计算机中名为it168的共享文件夹，用UNC表示就是\\softer\it168；如果是softer计算机的默认管理共享C$则用\\softer\c$来表示。我们访问网上邻居所采用的命令行访问法，实际上应该称作UNC路径访问法。
	4、echo：回显。













		
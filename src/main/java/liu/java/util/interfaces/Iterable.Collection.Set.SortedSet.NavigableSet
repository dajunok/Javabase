NavigableSet<E>接口：导航集合。【Since:1.6】
	使用导航方法扩展的SortedSet，报告给定搜索目标的最近（最靠近）匹配项。lower, floor, ceiling 和 higher方法分别返回小于、小于或等于、大于或等于以及大于给定元素的元素，如果没有此类元素，则返回空值。可以按升序或降序访问和遍历NavigableSet。descendingSet方法返回集合的视图，所有关系和方向方法的意义都颠倒了。
	升序操作和视图的性能可能比降序操作和视图的性能更快。此接口还定义了pollFirst和pollLast方法，这些方法返回并删除最低和最高的元素（如果存在），否则返回null。subSet, headSet 和 tailSet方法不同于类似的命名SortedSet方法，它接受描述下限和上限是包含还是排除的附加参数。任何NavigableSet的子集必须实现NavigableSet接口。
	导航方法的返回值在允许空元素的实现中可能不明确。但是，即使在这种情况下，也可以通过检查contains(null)消除结果的歧义。为了避免此类问题，鼓励此接口的实现不允许插入null元素。（请注意，可比较排序集元素本质上不允许为null。）
	方法subSet(E, E), headSet(E) 和 tailSet(E)被指定为返回SortedSet，以允许对SortedSet的现有实现进行兼容地改装以实现NavigableSet，但鼓励扩展和实现此接口以重写这些方法以返回NavigableSet。
	此接口是Java集合框架的成员。		
	
	接口定义	：public interface NavigableSet<E> extends SortedSet<E>
	父接口	：Iterable<E>,Collection<E>,Set<E>,SortedSet<E>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
	ceiling(E e):E
		返回此 集合中大于等于给定元素的最小元素；如果不存在这样的元素，则返回 null。
		【Throws】：
			● ClassCastException 如果无法将指定的元素与集合中当前的元素进行比较
			● NullPointerException 如果指定的元素为null，并且此集合不允许null元素
	descendingIterator():Iterator<E> 
		 按降序返回此集合中元素的迭代器。等效于descendingSet().iterator()			 
	descendingSet():NavigableSet<E> 
		返回包含在此集合中的元素的逆序视图。降序集由该集合支持，因此对该集合的更改反映在降序集中，反之亦然。如果在对任一集合进行迭代的过程中修改了任一集合（通过迭代器自己的remove操作除外），则迭代的结果不确定。
		返回的集具有与Collections.reverseOrder(comparator())等效的顺序。表达式s.descendingSet().descendingSet()返回的s视图实质上等同于s。
	floor(E e):E 
		 返回此集合中小于或等于给定元素的最大元素，如果没有此类元素，则返回null。
		 【Throws】：
			● ClassCastException 如果无法将指定的元素与集合中当前的元素进行比较
			● NullPointerException 如果指定的元素为null，并且此集合不允许null元素
	headSet(E toElement):SortedSet<E> 
		 △返回此集合中元素严格小于toElement的部分的视图。这个集合支持返回的集合，因此返回的集合中的更改反映在这个集合中，反之亦然。返回的集合支持此集合支持的所有可选集合操作。
		返回的集将在尝试插入超出其范围的元素时引发IllegalArgumentException异常。
		相当于headSet(toElement, false)
		【Throws】：
			● ClassCastException 如果toElement与这个集合的比较器不兼容（或者如果集合没有比较器，如果toElement没有实现Comparable接口）。如果无法将toElement与集合中当前的元素进行比较，则实现可能（但不必）引发此异常。
			● NullPointerException 如果指定的元素为null，并且此集合不允许null元素
			● IllegalArgumentException 如果此集合本身具有限制的范围，并且toElement位于范围的边界之外
	headSet(E toElement, boolean inclusive):NavigableSet<E> 
		返回此集合中元素小于（或等于，如果inclusive为true）toElement的部分的视图。这个集合支持返回的集合，因此返回的集合中的更改反映在这个集合中，反之亦然。返回的集合支持此集合支持的所有可选集合操作。
		返回的集将在尝试插入超出其范围的元素时引发IllegalArgumentException异常。
		【Throws】：
			● ClassCastException 如果toElement与这个集合的比较器不兼容（或者如果集合没有比较器，如果toElement没有实现Comparable接口）。如果无法将toElement与集合中当前的元素进行比较，则实现可能（但不必）引发此异常。
			● NullPointerException 如果指定的元素为null，并且此集合不允许null元素
			● IllegalArgumentException 如果此集合本身具有限制的范围，并且toElement位于范围的边界之外
	higher(E e):E 
		返回此集合中严格大于给定元素的最小元素；如果不存在这样的元素，则返回 null。
		【Throws】：
			● ClassCastException 如果无法将指定的元素与集合中当前的元素进行比较
			● NullPointerException 如果指定的元素为null，并且此集合不允许null元素
	iterator():Iterator<E> 
		△ 按升序返回此集合中元素的迭代器。		
	lower(E e):E 
		返回此集合中严格小于给定元素的最大的元素；如果没有此类元素，则返回空值。
		【Throws】：
			● ClassCastException 如果无法将指定的元素与集合中当前的元素进行比较
			● NullPointerException 如果指定的元素为null，并且此集合不允许null元素
	pollFirst():E 
		检索并删除第一个（最低）元素，或者如果该集合为空，则返回null。
	pollLast():E 
		检索并删除最后一个（最高）元素，或者如果该集为空，则返回null。
	subSet(E fromElement, boolean fromInclusive,E toElement,  boolean toInclusive):NavigableSet<E> 
		返回此集合中元素范围从fromElement（fromInclusive为true则包含fromElement）到toElement（toInclusive为true则包含toElement）的部分的视图。如果fromElement和toElement相等，则返回的集为空。这个集合支持返回的集合，因此返回的集合中的更改反映在这个集合中，反之亦然。返回的集合支持此集合支持的所有可选集合操作。
		【Throws】：
			● ClassCastException 如果fromElement和toElement与这个集合的比较器不兼容（或者如果集合没有比较器，如果fromElement和toElement没有实现Comparable接口）。如果无法将fromElement和toElement与集合中当前的元素进行比较，则实现可能（但不必）引发此异常。
			● NullPointerException 如果fromElement和toElement元素为null，并且此集合不允许null元素
			● IllegalArgumentException 如果此集合本身具有限制的范围，并且fromElement和toElement位于范围的边界之外
	subSet(E fromElement, E toElement):SortedSet<E> 
		△ 返回此集合中元素范围从fromElement（含fromElement）到toElement（不含toElement）的部分的视图。（如果fromElement和toElement相等，则返回的集合为空。）返回的集合由该集合支持，因此返回集合中的更改反映在该集合中，反之亦然。返回的集合支持此集合支持的所有可选集合操作。
		返回的集将在尝试插入超出其范围的元素时引发IllegalArgumentException异常。
		相当于subSet(fromElement, true, toElement, false)
		【Throws】：
			● ClassCastException 如果fromElement和toElement与这个集合的比较器不兼容（或者如果集合没有比较器，如果fromElement和toElement没有实现Comparable接口）。如果无法将fromElement和toElement与集合中当前的元素进行比较，则实现可能（但不必）引发此异常。
			● NullPointerException 如果fromElement和toElement元素为null，并且此集合不允许null元素
			● IllegalArgumentException 如果此集合本身具有限制的范围，并且fromElement和toElement位于范围的边界之外
	tailSet(E fromElement):SortedSet<E> 
		△ 返回此集合中元素大于或等于fromElement的部分的视图。这个集合支持返回的集合，因此返回的集合中的更改反映在这个集合中，反之亦然。返回的集合支持此集合支持的所有可选集合操作。
		返回的集将在尝试插入超出其范围的元素时引发IllegalArgumentException。
		相当于tailSet(fromElement, true)
		【Throws】：
			● ClassCastException 如果fromElement与这个集合的比较器不兼容（或者如果集合没有比较器，如果fromElement没有实现Comparable接口）。如果无法将fromElement与集合中当前的元素进行比较，则实现可能（但不必）引发此异常。
			● NullPointerException 如果指定的元素为null，并且此集合不允许null元素
			● IllegalArgumentException 如果此集合本身具有限制的范围，并且fromElement位于范围的边界之外			
	tailSet(E fromElement, boolean inclusive):NavigableSet<E> 		
		返回此集合中元素大于（或等于，如果inclusive为true）fromElement的部分的视图。这个集合支持返回的集合，因此返回的集合中的更改反映在这个集合中，反之亦然。返回的集合支持此集合支持的所有可选集合操作。				
		返回的集将在尝试插入超出其范围的元素时引发IllegalArgumentException异常。
		【Throws】：
			● ClassCastException 如果fromElement与这个集合的比较器不兼容（或者如果集合没有比较器，如果fromElement没有实现Comparable接口）。如果无法将fromElement与集合中当前的元素进行比较，则实现可能（但不必）引发此异常。
			● NullPointerException 如果指定的元素为null，并且此集合不允许null元素
			● IllegalArgumentException 如果此集合本身具有限制的范围，并且fromElement位于范围的边界之外
		
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
附录：
	1、注：文档中的△符号表示覆盖重写方法。







		

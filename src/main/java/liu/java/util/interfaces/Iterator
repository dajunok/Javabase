-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
Iterator<E>：迭代器。【Since:1.2】
	集合上的迭代器。Iterator取代了Java集合框架中的Enumeration接口（枚举）。迭代器与枚举有两种不同之处：
		● 迭代器允许调用方在迭代期间使用定义明确的语义从基础集合中移除元素。
		● 方法名称已得到改进。
	此接口是Java集合框架的成员。
	
	接口定义：public interface Iterator<E>	
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------	
	forEachRemaining(Consumer<? super E> action):default void 
		对剩余的每个元素执行给定的操作，直到所有元素都被处理或操作引发异常为止。如果指定了迭代顺序，则按迭代顺序执行操作。操作引发的异常将中继（传递）到调用方。
		默认实现的操作类似于：
			while (hasNext())
		         action.accept(next());
		【Throws】：
			● NullPointerException 如果指定的操作为null
	hasNext():boolean 
		如果迭代包含更多元素，则返回true。（换句话说，如果 next()返回一个元素而不是引发异常，则返回true。）
	next():E 
		返回迭代中的下一个元素。
		【Throws】：
			● NoSuchElementException 如果迭代没有更多元素
	remove():default void 
		从基础集合中移除此迭代器返回的最后一个元素（可选操作）。每次调用next()时只能调用一次此方法。如果在迭代过程中，除了调用此方法，其他任何方式修改基础集合，则迭代器的操作不确定。
		默认实现抛出UnsupportedOperationException异常，不执行其他操作。
		【Throws】：
			● UnsupportedOperationException 如果此迭代器不支持remove操作
			● IllegalStateException 如果尚未调用next()方法，或者在上次调用next()方法后已经调用了remove()方法
			
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法。
	2、文档中的低端点、高端点通常指的是范围值的左右边界。
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
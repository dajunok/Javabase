----------------------------------------SimpleFormatter--------------------------------------------------------------------------------------------------------------
SimpleFormatter：简易格式化器。	【Since:1.4】
	以可读的格式打印日志记录（LogRecord）的简要摘要。摘要通常为1行或2行。
	配置：SimpleFormatter使用java.util.logging.SimpleFormatter.format属性中指定的格式字符串初始化，以格式化日志消息。此属性可以在日志属性配置文件中定义，也可以定义为系统属性。如果在日志属性和系统属性中都设置了此属性，则将使用系统属性中指定的格式字符串。如果未定义此属性或给定的格式字符串非法，则默认格式为特定于实现的格式。
	
	
	类定义	：public class SimpleFormatter extends Formatter
------------------------------------------------------------------------------------------------------------------------------------------------------
Constructor Summary（构造器概要）：
	public SimpleFormatter()
			
			
			
Method Summary（方法概要）：
	format(LogRecord record):synchronized String 
		record - 要格式化的日志记录。
		格式化给定的日志记录（LogRecord）。
		可以通过在java.util.logging.SimpleFormatter.format属性中指定格式字符串来自定义格式。给定的日志记录将按如下方式格式化：
			String.format(format, date, source, logger, level, message, thrown);
		其中参数为：
			1、format - 在java.util.logging.SimpleFormatter.format属性或默认格式中指定的java.util.Formatter格式字符串。
			2、date - 表示日志记录的事件时间的Date对象。
			3、source - 表示调用者的字符串（如果可用）；否则，是记录器的名称。
			4、logger - 记录器的名称。
			5、level - 日志级别。
			6、message - 从Formatter.formatMessage(LogRecord)方法返回的格式化日志消息。它使用java.text格式，不使用java.util.Formatter格式参数。
			7、thrown - 表示与日志记录及其回溯关联的可丢弃的字符串，以换行符开头（如果有）；否则为空字符串。
		一些示例格式：
			● java.util.logging.SimpleFormatter.format="%4$s: %5$s [%1$tc]%n"	
				这将以方括号打印一行日志级别（4$）、日志消息（5$）和时间戳（1$）。
				WARNING: warning message [Tue Mar 22 13:11:31 PDT 2011]
			● java.util.logging.SimpleFormatter.format="%1$tc %2$s%n%4$s: %5$s%6$s%n"
				这将打印两行，其中第一行包括时间戳（1$）和源（2$）；第二行包括日志级别（4$）和日志消息（5$），然后是可丢弃的及其回溯（6$），如果有：
			     Tue Mar 22 13:11:31 PDT 2011 MyClass fatal
			     SEVERE: several message with an exception
			     java.lang.IllegalArgumentException: invalid argument
			             at MyClass.mash(MyClass.java:9)
			             at MyClass.crunch(MyClass.java:6)
			             at MyClass.main(MyClass.java:3)	
			● java.util.logging.SimpleFormatter.format="%1$tb %1$td, %1$tY %1$tl:%1$tM:%1$tS %1$Tp %2$s%n%4$s: %5$s%n"	
				这将以不同的日期/时间格式打印两行与上面的示例类似的内容，并且不打印“可丢弃”及其回溯：
			     Mar 22, 2011 1:11:31 PM MyClass fatal
			     SEVERE: several message with an exception						
		也可以在子类中重写此方法。建议使用Formatter.formatMessage(java.util.logging.LogRecord)便利方法本地化和格式化消息字段。	
	
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	
	3、manifest文件：描述Jar文件的打包、运行信息。













		
----------------------------------------Manifest--------------------------------------------------------------------------------------------------------------
Manifest：清单。【Since:1.2】
	Manifest类用于维护Manifest项名称及其关联属性。有主Manifest属性以及每个条目属性。有关Manifest格式的信息，请参阅Manifest格式规范。
	
	
	类定义	：public class Manifest implements Cloneable
	实现接口	：Cloneable
------------------------------------------------------------------------------------------------------------------------------------------------------
Constructor Summary（构造器概要）：
	public Manifest()
		构造新的空Manifest。
	public Manifest(InputStream is)
		is - 包含manifest数据的输入流
		从指定的输入流构造新Manifest。
		【Throws】：
			IOException 如果发生I/O错误
	public Manifest(Manifest man)
		man - 要复制的Manifest
		构造新Manifest，该Manifest是指定Manifest的副本。
			
Method Summary（方法概要）：
	clear():void 
		清除此Manifest中的主属性和条目。
	clone():Object 
		返回此清单的浅副本。浅拷贝的实现如下：
			public Object clone() { return new Manifest(this); }
	equals(Object o):boolean 
		如果指定的Object也是Manifest并且具有相同的主要Attributes和条目，则返回true。
	getAttributes(String name):Attributes 
		返回指定项(entry)名称的属性。此方法定义为：
			return (Attributes)getEntries().get(name)
		虽然null是一个有效的名称，但是当从JAR文件获取的Manifest上调用getAttributes(null)时，将返回null。虽然jar文件本身不允许null的命名属性，但可以在Manifest上调用getEntries()，并在该结果上使用null键和任意值调用put。getAttributes(null)的后续调用将返回刚才的投入值。
		请注意，此方法不返回manifest的主属性；请参阅getMainAttributes()。
	getEntries():Map<String,Attributes> 
		返回此Manifest中包含的项的映射。每个条目都由一个字符串名称（键）和关联的属性（值）表示。MAP允许null键，但是没有null键的条目是由read(java.io.InputStream)创建的，也不是使用write(java.io.OutputStream)编写的条目。
	getMainAttributes():Attributes 
		返回Manifest的主属性。
	hashCode():int 
		返回此Manifest的哈希代码。
	read(InputStream is):void 
		is - 包含manifest数据的输入流
		从指定的输入流读取Manifest。读取的条目名称和属性将与当前Manifest条目合并。
		【Throws】：
			IOException 如果发生I/O错误
	write(OutputStream out):void 
		out - 包含manifest数据的输出流。
		将Manifest写入指定的输出流。在调用此方法之前，必须在MainAttributes中设置OutputStream.Attributes.Name.MANIFEST_VERSION。
		【Throws】：
			IOException 如果发生I/O错误
		
	
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	
	3、manifest文件：描述Jar文件的打包、运行信息。

-----------------------------------------BiConsumer<T, U>-----------------------------------------------------------------------------------------------------------------------------		
BiConsumer<T, U>：双参数消费者。 【Since:1.8】
	<T> - 操作的第一个参数的类型
	<U> - 操作的第二个参数的类型
	这是一个函数接口，因此可以用作lambda表达式或方法引用的赋值目标。
	表示接受两个输入参数且不返回结果的操作。这是两个重要的专门消费者（Consumer）。与大多数其他函数接口不同，预计BiConsumer将通过副作用进行操作。
	这是一个函数接口，其函数方法是accept(Object, Object)。
	
	
	接口定义	：@FunctionalInterface public interface BiConsumer<T, U>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	accept(T t, U u):void 
		对给定的参数执行此操作。
	andThen(BiConsumer<? super T, ? super U> after):default BiConsumer<T, U> 
		返回一个组合的BiConsumer，该BiConsumer依次执行此操作和after操作。如果执行任一操作引发异常，则会将异常中继到组合操作的调用方。如果执行此操作引发异常，则不会执行after操作。
		【Throws】：
			NullPointerException 如果after为null




























-----------------------------------------Function<T, R>-----------------------------------------------------------------------------------------------------------------------------		
BiFunction<T, U, R>：双参数函数。 【Since:1.8】
	<T> - 函数的输入类型
	<R> - 函数的结果类型
	这是一个函数接口，因此可以用作lambda表达式或方法引用的赋值目标。
	表示接受一个参数并生成结果的函数。
	这是一个函数接口，其函数方法是apply(Object)
	
	接口定义	：@FunctionalInterface public interface Function<T, R>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	identity():static <T> Function<T, T> 
		T - 函数的输入和输出对象的类型
		返回一个始终返回其输入参数的函数。
	andThen(Function<? super R, ? extends V> after):default <V> Function<T, V> 
		<V> - after函数和复合函数的输出类型。
		after - 应用此函数之后要应用的函数。
		返回一个组合函数，该函数首先将此函数应用于其输入，然后将after函数应用于结果。如果对任意一个函数的计算引发异常，则它将被中继到组合函数的调用方。
		首先应用此函数，然后应用后一个函数的组合函数。
		【Throws】：
			NullPointerException 如果after为null
	apply(T t):R 
		将此函数应用于给定的参数。
	compose(Function<? super V, ? extends T> before):default <V> Function<V, R> 
		<V> - after函数和复合函数的输出类型。
		before - 应用此函数之前要应用的函数
		返回一个组合函数，该函数首先将before函数应用于其输入，然后将此函数应用于结果。如果对任意一个函数的计算引发异常，则它将被中继到组合函数的调用方。
		【Throws】：
			NullPointerException 如果before为null
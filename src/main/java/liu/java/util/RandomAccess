-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
RandomAccess：随机访问接口。【Since:1.4】
	列表实现类使用的标记接口，用于指示它们支持快速（通常是恒定时间）随机访问。此接口的主要目的是允许通用算法在应用于随机或顺序访问列表时更改其行为以提供良好的性能。
	当应用于顺序访问列表（如LinkedList）时，操作随机访问列表（如ArrayList）的最佳算法可以产生二次行为。建议使用通用列表算法，在将给定列表应用于顺序访问列表时，在应用性能较差的算法之前检查给定列表是否是此接口的实例，并在必要时更改其行为，以确保可接受的性能。
	人们认识到，随机访问和顺序访问之间的区别往往是模糊的。例如，一些列表实现提供了渐进的线性访问时间，如果它们获得巨大的，但在实践中访问时间不变。这样的列表实现通常应该实现这个接口。根据经验，如果对于类的典型实例，此循环：
		for (int i=0, n=list.size(); i < n; i++)
	         list.get(i);
	运行速度比此循环快：
		for (Iterator i=list.iterator(); i.hasNext(); )
         i.next();
   	此接口是Java集合框架的成员。	
	
	接口定义：public interface RandomAccess
	实现类：ArrayList, AttributeList, CopyOnWriteArrayList, RoleList, RoleUnresolvedList, Stack, Vector
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
----------------------------------------DeflaterInputStream--------------------------------------------------------------------------------------------------------------
DeflaterInputStream：压缩器输入流	【Since:1.6】
	实现一个用于以“deflate”压缩格式压缩数据的输入流过滤器。
	
	
	类定义	：public class DeflaterInputStream extends FilterInputStream
	实现接口	：Closeable, AutoCloseable
------------------------------------------------------------------------------------------------------------------------------------------------------
Field Summary（字段概要）
	buf
		用于读取压缩数据的输入缓冲区。
	def
		用于此流的压缩器。
		
Constructor Summary（构造器概要）：
	public DeflaterInputStream(InputStream in)
		in - 将未压缩数据读取到的输入流
		使用默认的压缩器和缓冲区大小创建新的输入流。
		【Throws】：
			NullPointerException 如果in为null。
	public DeflaterInputStream(InputStream in, Deflater defl)
		in - 将未压缩数据读取到的输入流
		defl - 用于此流的压缩器("deflater")
		使用指定的压缩器和默认缓冲区大小创建新的输入流。
		【Throws】：
			NullPointerException 如果in或者defl为null。
	public DeflaterInputStream(InputStream in, Deflater defl, int bufLen)
		in - 将未压缩数据读取到的输入流
		defl - 用于此流
		bufLen - 压缩缓冲区大小
		使用指定的压缩器和缓冲区大小创建新的输入流。
		【Throws】：
			IllegalArgumentException 如果 bufLen <= 0。
			NullPointerException 如果in或者defl为null。
		
Method Summary（方法概要）：
	available():int 
		到达EOF后返回0，否则始终返回1。
		程序不应指望此方法可以不阻塞地读取到实际字节数并返回。
		到达基础输入流结尾后返回零，否则始终返回1。
		【Throws】：
			IOException 如果发生I/O错误或此流已关闭。
	close():void 
		关闭此输入流及其基础输入流，丢弃任何挂起的未压缩数据。
		【Throws】：
			IOException 如果发生I/O错误。
	mark(int limit):void
		 limit - 在使位置标记无效之前可以读取的最大字节数
		 不支持此操作。
	markSupported():boolean 
		始终返回false，因为此输入流不支持mark()和reset()方法。
	read():int 
		从输入流中读取单字节压缩数据。此方法将一直阻塞，直到可以读取和压缩某些输入。
		返回压缩数据的单个字节，或者如果到达未压缩输入流的末尾，则返回-1。
	read(byte[] b, int off, int len):int 
		b - 读取数据的缓冲区
		off - b内数据的起始偏移量
		len - 要读入b的最大压缩字节数	
		将压缩数据读取到字节数组中。此方法将一直阻塞，直到可以读取和压缩某些输入。
		返回实际读取的字节数，如果达到未压缩的输入流的结尾，则返回-1。
	reset():void 
		limit - 在使位置标记无效之前可以读取的最大字节数
		不支持此操作。		
		【Throws】：
			IOException 总是一直抛出此异常。
	skip(long n):long 
		n - 要跳过的字节数。
		跳过并丢弃输入流中的数据。在读取和跳过指定的字节数之前，此方法可能会阻塞。注意：当n为long时，可以跳过的最大字节数为Integer.MAX_VALUE。
		返回跳过的实际字节数。
		【Throws】：
			IOException 如果发生I/O错误或此流已关闭。
			
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	
	3、manifest文件：描述Jar文件的打包、运行信息。
	













		
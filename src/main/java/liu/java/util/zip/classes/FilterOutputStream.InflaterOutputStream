----------------------------------------DeflaterOutputStream--------------------------------------------------------------------------------------------------------------
InflaterOutputStream：解压器输出流	【Since:1.6】
	实现用于解压缩以“deflate”压缩格式存储的数据的输出流过滤器。
	
	
	类定义	：public class InflaterOutputStream extends FilterOutputStream
	实现接口	：Closeable, Flushable, AutoCloseable
------------------------------------------------------------------------------------------------------------------------------------------------------
Field Summary（字段概要）
	buf
		用于写入未压缩数据的输出缓冲区。
	inf
		用于此流的解压器。
		
Constructor Summary（构造器概要）：
	public InflaterOutputStream(OutputStream out)
		out - 将未压缩数据写入的输出流
		使用默认的解压器和缓冲区大小创建新的输出流。
		【Throws】：
			NullPointerException 如果out为null。
	public InflaterOutputStream(OutputStream out, Inflater infl)
		out - 将未压缩数据写入的输出流
		infl - 此流的解压器("inflater")
		使用指定的解压器和默认缓冲区大小创建新的输出流。
		【Throws】：
			NullPointerException 如果out或infl为null。
	public InflaterOutputStream(OutputStream out, Inflater infl, int bufLen)
		out - 将未压缩数据写入的输出流
		infl - 此流的解压器("inflater")
		bufLen - 解压缩缓冲区大小
		使用指定的解压器和缓冲区大小创建新的输出流。
		【Throws】：
			IllegalArgumentException 如果bufLen <= 0。
			NullPointerException 如果out或infl为null。
		
Method Summary（方法概要）：
	close():void 
		将任何剩余的未压缩数据写入输出流并关闭基础输出流。
		【Throws】：
			IOException - 如果发生I/O错误。
	finish():void 
		在不关闭基础流的情况下，将未压缩的数据写入输出流。对同一输出流连续应用多个过滤器时，请使用此方法。
		【Throws】：
			IOException 如果发生I/O错误或此流已关闭
	flush():void 
		刷新此输出流，强制写入任何挂起的缓冲输出字节。
		【Throws】：
			IOException 如果发生I/O错误或此流已关闭
	write(byte[] b, int off, int len):void 
		b - 包含要解压缩并写入输出流的压缩数据的缓冲区
		off - b内压缩数据的起始偏移量
		len - 要从b中解压缩的字节数
		将字节数组写入未压缩的输出流。	
	write(int b):void 
		b - 用于解压缩和写入输出流的单字节压缩数据
		将字节写入未压缩的输出流。
		【Throws】：
			IOException 如果发生I/O错误或此流已关闭。
			ZipException 如果发生压缩（ZIP）格式错误。
			
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	
	3、manifest文件：描述Jar文件的打包、运行信息。
	













		
一、案例说明：
	1、案例通过BitSet类实现对指定长度的位集进行二进制位运算。
二、源代码文件（.java）介绍：
三、知识点：
	1、BitSet类实现了一个按需增长的位向量。位Set的每一个组件都有一个boolean值。用非负的整数将BitSet的位编入索引。可以对每个编入索引的位进行测试、设置或者清除。
		通过逻辑与、逻辑或和逻辑异或操作，可以使用一个 BitSet修改另一个 BitSet的内容。默认情况下，set 中所有位的初始值都是false。每个位 set 都有一个当前大小，
		也就是该位 set 当前所用空间的位数。注意，这个大小与位 set 的实现有关，所以它可能随实现的不同而更改。位 set 的长度与位 set 的逻辑长度有关，并且是与实现无关而定义的。 
		BitSet的底层实现是使用long数组作为内部存储结构的，所以BitSet的大小为long类型大小(64位)的整数倍。
		第一个构造方法创建一个默认的对象：
			BitSet()
		第二个方法允许用户指定初始大小。所有位初始化为0。
			BitSet(int size)
	--------------------------------------------------------------------------------------------------------------------------------------------
	2、BitSet类：这个类实现了一个位向量，它可以根据需要增长。位集的每个组件都有一个布尔值。位集的位由非负整数索引。可以检查、设置或清除单个索引位。一个位集可用于通过逻辑与、逻辑包含或、逻辑排除或操作修改另一个位集的内容。
	
		类定义：public class BitSet extends Object implements Cloneable, Serializable
	--------------------------------------------------------------------------------------------------------------------------------------------
		valueOf(byte[] bytes):static BitSet 
			返回包含给定字节数组中所有位的新位集BitSet。
		valueOf(ByteBuffer bb):static BitSet 
			返回一个新的位集，该位集包含给定字节缓冲区bb中位于其位置和限制之间的所有位。
		valueOf(LongBuffer lb):static BitSet 
			返回一个新的位集，该位集包含给定long缓冲区lb中位于其位置和限制之间的所有位。
		valueOf(long[] longs):static BitSet 
			返回包含给定long数组中所有位的新位集。
		and(BitSet set):void 
			对此目标位集和参数位集set执行逻辑与操作。
		andNot(BitSet set):void 
			清除此位集中对应位设置在指定位集中的所有位。其相应的位在指定的 BitSet中已设置。
		cardinality():int 	
			返回此 BitSet中设置为 true的位数。
		clear():void 
			将该位集中的所有位设置为false。
		clear(int bitIndex):void 
			将索引指定的位设置为false。
		clear(int fromIndex, int toIndex):void 
			将从指定的fromindex（包含）到指定的toindex（不包含）的位设置为false。
		clone():Object 
			克隆此位集将生成一个与其相等的新位集。位集的克隆是另一个位集，与该位集具有完全相同的位设置为ture。
		equals(Object obj):boolean 
			将此对象与指定的对象进行比较。`如果且仅当参数不为空并且是与该位集具有完全相同的位集设置为真的位集对象，则结果为真。也就是说，对于每个非负的int索引k，
				((BitSet)obj).get(k) == this.get(k)
			一定是ture。不比较两个位集的当前大小。
		flip(int bitIndex):void 
			将指定索引处的位设置为其当前值的补码。
		flip(int fromIndex, int toIndex):void 
			将指定的 fromIndex（包括）到指定的 toIndex（不包括）范围内的每个位设置为其当前值的补码。
		get(int bitIndex):boolean 
			返回指定索引处的位值。
		get(int fromIndex, int toIndex):BitSet 
			返回一个新的 BitSet，它由此 BitSet 中从 fromIndex（包括）到 toIndex（不包括）范围内的位组成。
		hashCode():int 
			返回此位集的哈希码值。
		intersects(BitSet set):boolean 
			如果指定的 BitSet中有设置为 true 的位，并且在此 BitSet中也将其设置为 true，如果存在的话则返回 true。
		isEmpty():boolean 
			如果此 BitSet 中没有包含任何设置为 true的位，则返回 true。	
		length():int 
			返回此 BitSet 的"逻辑大小"：BitSet中最高设置位的索引加 1。
		nextClearBit(int fromIndex):int 
			返回第一个设置为 false的位的索引，这发生在指定的起始索引或之后的索引上。
		nextSetBit(int fromIndex):int 
			返回第一个设置为 true 的位的索引，这发生在指定的起始索引或之后的索引上。
		or(BitSet set):void 
			使用指定位集与此位集执行逻辑或操作。
		previousClearBit(int fromIndex):int
			返回在指定的起始索引上或之前的、设置为false的最近位的索引。
		previousSetBit(int fromIndex):int 
			返回在指定的起始索引上或之前设置为true的最近位的索引。
		set(int bitIndex):void 
			将指定索引处的位设置为 true。
		set(int bitIndex, boolean value):void 
			将指定索引处的位设置为指定的值。
		set(int fromIndex, int toIndex):void 
			将指定的 fromIndex（包括）到指定的 toIndex（不包括）范围内的位设置为 true。
		set(int fromIndex, int toIndex, boolean value):void 
			将指定的 fromIndex（包括）到指定的 toIndex（不包括）范围内的位设置为指定的值。
		size():int 
			返回此 BitSet表示位值时实际使用空间的位数。
		stream():IntStream 
			返回一个索引流，该索引流的位集包含处于设置状态的位。索引按顺序返回，从低到高。流的大小是处于设置状态的位数，等于cardinality（）方法返回的值。
			在执行终端流操作期间，位集必须保持不变。否则，终端流操作的结果未定义。	
		toByteArray():byte[] 
			返回包含此位集中所有位的新字节数组。
		toLongArray():long[] 
			返回包含此位集中所有位的新长数组。
		toString():String 
			返回此位集的字符串表示形式。(返回所有值为true的位的索引号)
		xor(BitSet set):void
			使用位集参数执行此位集的逻辑异或。
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
-----------------------------------------MatchResult-----------------------------------------------------------------------------------------------------------------------------		
MatchResult：匹配结果。 【Since:1.5】
	匹配操作的结果。
	此接口包含用于确定与正则表达式匹配结果的查询方法。可以看到匹配边界、组和组边界，但不能通过MatchResult进行修改。
	
	
	
	接口定义	：public interface MatchResult
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	end():int 
		返回最后一个匹配字符后的偏移量（offset）。
		【Throws】：
			IllegalStateException 如果尚未尝试匹配，或者上一个匹配操作失败
	end(int group):int 
		group - 此匹配器模式中捕获组的索引
		返回在此匹配期间给定组捕获的子序列的最后一个字符后的偏移量。
		捕获组从左到右索引，从1开始。Group 0表示整个模式，因此表达式m.end(0)等价于m.end()。
		返回组捕获的最后一个字符后的偏移量，如果匹配成功，但组本身不匹配，则返回-1。
		【Throws】：
			IllegalStateException 如果尚未尝试匹配，或者上一个匹配操作失败。
			IndexOutOfBoundsException 如果模式中没有具有给定索引的捕获组
	group():String 
		返回与上一个匹配项匹配的输入子序列。
		对于具有输入序列s的匹配器m，表达式m.group()和s.substring(m.start(), m.end())是等效的。
		请注意，一些模式（例如a*）与空字符串匹配。当模式成功匹配输入中的空字符串时，此方法将返回空字符串。
		返回以字符串形式与上一个匹配项匹配的（可能为空）子序列。
		【Throws】：
			IllegalStateException 如果尚未尝试匹配，或者上一个匹配操作失败。
	group(int group):String 
		group - 此匹配器模式中捕获组的索引
		返回在上一个匹配操作期间由给定组捕获的输入子序列。
		对于匹配器m、输入序列s和组索引g，表达式m.group(g)和s.substring(m.start(g), m.end(g))是等效的。
		捕获组从左到右索引，从1开始。group zero表示整个模式，因此表达式m.group(0)等价于m.group()。
		如果匹配成功，但指定的组未能匹配输入序列的任何部分，则返回null。请注意，一些组（例如（a*）与空字符串匹配。当此类组成功匹配输入中的空字符串时，此方法将返回空字符串。
		【Throws】：
			IllegalStateException 如果尚未尝试匹配，或者上一个匹配操作失败。
			IndexOutOfBoundsException 如果模式中没有具有给定索引的捕获组
	groupCount():int 
		返回此匹配结果模式中捕获组的数目。
		零组按约定表示整个模式。它不包括在这个计数中。
		任何小于或等于此方法返回值的非负整数都保证是此匹配器的有效组索引。
	start():int 
		返回匹配项的起始索引。
		返回匹配的第一个字符的索引。
		【Throws】：
			IllegalStateException 如果尚未尝试匹配，或者上一个匹配操作失败
	start(int group):int 
		group - 此匹配器模式中捕获组的索引
		返回给定组在此匹配期间捕获的子序列的起始索引。
		捕获组从左到右索引，从1开始。group zero表示整个模式，因此表达式m.start(0) 等价于m.start()。
		返回组捕获的第一个字符的索引，如果匹配成功，则返回-1，但组本身不匹配任何内容。
		【Throws】：
			IllegalStateException 如果尚未尝试匹配，或者上一个匹配操作失败。
			IndexOutOfBoundsException 如果模式中没有具有给定索引的捕获组
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------	
附录：
	1、正则表达式的捕获组：
		● 普通捕获组	
			从正则表达式左侧开始，每出现一个左括号“(”记做一个分组，分组编号从1开始。0代表整个表达式。
			例如：对于时间字符串：2017-04-25，表达式如下
				(\\d{4})-((\\d{2})-(\\d{2}))
			有4个左括号，所以有4个分组
			编号                                           捕获组                                           						 匹配
			0			(\\d{4})-((\\d{2})-(\\d{2}))			2017-04-25			
			1				(\\d{4})								2017
			2			((\\d{2})-(\\d{2}))							04-25
			3				(\\d{2})								04
			4				(\\d{2})								25
		● 命名捕获组
			每个以左括号开始的捕获组，都紧跟着“?”，而后才是正则表达式。
			例如：对于时间字符串：2017-04-25，表达式如下
				(?<year>\\d{4})-(?<md>(?<month>\\d{2})-(?<date>\\d{2}))
			有4个命名的捕获组，分别是
			编号                                      名称					捕获组                                           					 匹配
			0				0			(?\d{4})-(?(?\d{2})-(?\d{2}))			2017-04-25			
			1				year			(?\d{4})								2017
			2				md				(?(?\d{2})-(?\d{2}))					04-25
			3				month			(?\d{2})								04
			4				date			(?\d{2})								25
	
	
	
	
	
	
一、案例说明：
	1、案例通过EventListener接口和EventObject类实现java事件监听机制。
二、源代码文件（.java）介绍：
	【MyEvent.java】：事件对象：继承了EventObject类。
	【Source.java】：事件源。
	【StateChangeListener.java】：事件监听器。实现了EventListener接口
	【StateChangeToOneListener.java】：事件监听器。实现了EventListener接口
三、知识点：
	1、java 事件机制：
		● EventListener：事件监听器。
			是一个标记接口，就是说该接口内是没有任何方法的。所有事件监听器都需要实现该接口。事件监听器注册在事件源上，当事件源的属性或状态改变的时候，调用相应监听器内的回调方法。
		● EventObject:事件对象。
			是事件状态对象的基类，它封装了事件源对象以及和事件相关的信息。所有java的事件类都需要继承该类。
		● Source：事件源
			事件源不需要实现或继承任何接口或类，它是事件最初发生的地方。因为事件源需要注册事件监听器，所以事件源内需要有相应的盛放事件监听器的容器。
			
四、涉及接口详情：
	-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	30、EventListener：事件监听器。是一个标记接口，就是说该接口内是没有任何方法的。所有事件监听器都需要实现该接口。事件监听器注册在事件源上，当事件源的属性或状态改变的时候，调用相应监听器内的回调方法。

	-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
	
-----------------------------------------CharSequence-----------------------------------------------------------------------------------------------------------------------------		
CharSequence：可自动关闭 【Since:1.4】
	CharSequence是字符值的可读序列。这个接口提供了对许多不同类型字符序列的统一只读访问。char值表示基本多语言平面（BMP）或代理项中的字符。有关详细信息，请参阅Unicode字符表示。
	此接口不优化equals和hashCode方法的常规约定。因此，比较实现CharSequence的两个对象的结果通常是未定义的。每个对象可以由不同的类实现，并且不能保证每个类都能够测试其实例是否与另一个类的实例相等。因此，不适合将任意字符序列实例用作集合中的元素或映射中的键。
	
	       	

	接口定义	：public interface CharSequence 
	实现类	：CharBuffer, Segment, String, StringBuffer, StringBuilder
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	charAt(int index):char 
		index - 要返回的char值的索引。
		返回指定索引处的char值。索引的范围从零到length()-1。对于数组索引，序列的第一个char值位于索引0，下一个位于索引1，依此类推。
		如果索引指定的char值是代理项，则返回代理项值。
		返回指定索引处的char值。
		【Throws】：
			IndexOutOfBoundsException 如果index参数为负或不小于length()。
	chars():default IntStream 
		返回从该序列零扩展char值的int流。映射到代理代码点的任何字符都将通过未解析的方式传递。
		如果序列在读取流时发生变异，则结果不确定。
		返回源自此序列char值的流（IntStream）。
	codePoints():default IntStream 
		返回此序列中的代码点值的流。序列中遇到的任何代理项对都将按Character.toCodePoint组合，结果将传递给流（Stream）。任何其他代码单元，包括普通的BMP字符、不成对的代理项和未定义的代码单元，都被零扩展为int值，然后这些值被传递给流（Stream）。
		如果序列在读取流时发生变异，则结果不确定。
		返回来自此序列的Unicode代码点的IntStream流。
	length():int 
		返回此字符序列的长度。长度是序列中16位字符的数目。
		返回此序列中的字符数。
	subSequence(int start, int end):CharSequence 
		start - 起始索引（包含）。
		end - 结束索引（不包含）。
		返回此序列的子序列的CharSequence。子序列以指定索引处的char值开始，以索引 end-1处的char值结束。返回序列的length (in chars)为end-start，因此如果start==end，则返回空序列。
		返回指定的子序列。
		【Throws】：
			IndexOutOfBoundsException 如果start或end参数为负，或者end大于length()；或者start大于end。
	toString():public String 
		返回一个字符串，该字符串包含此序列中与此序列顺序相同的字符。字符串的长度将是该序列的长度。
		返回完全由这个字符序列组成的字符串。
		
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	


-----------------------------------------AutoCloseable-----------------------------------------------------------------------------------------------------------------------------		
AutoCloseable：可自动关闭 【Since:1.7】
	一个对象，它可以保存资源（如文件或套接字（socket）句柄），直到关闭为止。当退出Try-with-Resources块（该对象已在资源规范头中声明）时，将自动调用AutoCloseable的close()方法。这种结构确保了及时发布，避免了可能发生的资源耗尽异常和错误。
	
	API注意事项：
		即使不是所有的子类或实例都具有可释放的资源，基类实现AutoCloseable也是可能的，而且事实上也是常见的。对于必须以完全通用性操作的代码，或者当已知AutoCloseable实例需要资源释放时，建议使用Try-with-Resources结构。但是，当使用诸如支持基于I/O和非基于I/O的形式的Stream之类的工具时，在使用非基于I/O的形式时，通常不需要使用try-with-resources块。
	
	
	       	

	接口定义	：public interface AutoCloseable
	实现类	：AbstractInterruptibleChannel, AbstractSelectableChannel, AbstractSelector, AsynchronousFileChannel, AsynchronousServerSocketChannel, AsynchronousSocketChannel, AudioInputStream, BufferedInputStream, BufferedOutputStream, BufferedReader, BufferedWriter, ByteArrayInputStream, ByteArrayOutputStream, CharArrayReader, CharArrayWriter, CheckedInputStream, CheckedOutputStream, CipherInputStream, CipherOutputStream, DatagramChannel, DatagramSocket, DataInputStream, DataOutputStream, DeflaterInputStream, DeflaterOutputStream, DigestInputStream, DigestOutputStream, FileCacheImageInputStream, FileCacheImageOutputStream, FileChannel, FileImageInputStream, FileImageOutputStream, FileInputStream, FileLock, FileOutputStream, FileReader, FileSystem, FileWriter, FilterInputStream, FilterOutputStream, FilterReader, FilterWriter, Formatter, ForwardingJavaFileManager, GZIPInputStream, GZIPOutputStream, ImageInputStreamImpl, ImageOutputStreamImpl, InflaterInputStream, InflaterOutputStream, InputStream, InputStream, InputStream, InputStreamReader, JarFile, JarInputStream, JarOutputStream, LineNumberInputStream, LineNumberReader, LogStream, MemoryCacheImageInputStream, MemoryCacheImageOutputStream, MLet, MulticastSocket, ObjectInputStream, ObjectOutputStream, OutputStream, OutputStream, OutputStream, OutputStreamWriter, Pipe.SinkChannel, Pipe.SourceChannel, PipedInputStream, PipedOutputStream, PipedReader, PipedWriter, PrintStream, PrintWriter, PrivateMLet, ProgressMonitorInputStream, PushbackInputStream, PushbackReader, RandomAccessFile, Reader, RMIConnectionImpl, RMIConnectionImpl_Stub, RMIConnector, RMIIIOPServerImpl, RMIJRMPServerImpl, RMIServerImpl, Scanner, SelectableChannel, Selector, SequenceInputStream, ServerSocket, ServerSocketChannel, Socket, SocketChannel, SSLServerSocket, SSLSocket, StringBufferInputStream, StringReader, StringWriter, URLClassLoader, Writer, XMLDecoder, XMLEncoder, ZipFile, ZipInputStream, ZipOutputStream
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	close():void 
		关闭此资源，放弃任何底层资源。此方法将自动对Try-with-Resources语句管理的对象调用。
		虽然此接口方法声明为抛出Exception，但强烈建议实现者声明close方法的具体实现以抛出更具体的异常，或者在close操作无法失败时根本不抛出异常。
		关闭操作可能失败的情况需要实施者仔细注意。强烈建议在抛出异常之前，放弃底层资源并在内部将资源标记为已关闭。close方法不太可能被多次调用，因此这可以确保及时释放资源。此外，它还减少了当资源被另一个资源包装或包装时可能出现的问题。
		强烈建议此接口的实现者不要使用close方法抛出InterruptedException。此异常与线程的中断状态交互，如果禁止InterruptedException，则可能会发生运行时错误行为。更一般地说，如果它会导致抑制异常的问题，AutoCloseable.close方法不应该抛出异常。
		注意，与closeable的close方法不同，这个close方法不需要是等幂的。换句话说，多次调用此close方法可能会产生一些可见的副作用，这与Closeable.close同，如果多次调用Closeable.close，则要求它不起作用。然而，强烈建议此接口的实现者使其close方法是等幂的。
		【Throws】：
			Exception 如果无法关闭此资源。
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	



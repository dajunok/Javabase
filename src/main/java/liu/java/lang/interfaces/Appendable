-----------------------------------------Appendable-----------------------------------------------------------------------------------------------------------------------------		
Appendable：可追加 【Since:1.5】
	可以追加字符序列和值的对象。Appendable接口必须由其实例要从Formatter接收格式化输出的任何类实现。
	要追加的字符应为Unicode字符表示中描述的有效Unicode字符。注意，补充字符可以由多个16位字符值组成。     
	对于多线程访问，Appendable不一定是安全的。线程安全是扩展和实现该接口的类的责任。
	由于此接口可以由具有不同错误处理样式的现有类实现，因此无法保证将错误传播到调用程序。
	         	

	接口定义	：public interface Appendable
	实现类	：BufferedWriter, CharArrayWriter, CharBuffer, FileWriter, FilterWriter, LogStream, OutputStreamWriter, PipedWriter, PrintStream, PrintWriter, StringBuffer, StringBuilder, StringWriter, Writer
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	append(char c):Appendable
		 c - 要追加的字符。
		 将指定字符附加到此Appendable。
		 返回Appendable的引用。
		【Throws】：
			IOException 如果发生I/O错误。
	append(CharSequence csq):Appendable 
		csq - 要追加的字符序列。如果csq为null，那么将在该Appendable后追加四个字符“null”。
		将指定的字符序列追加到此Appendable。
		根据实现字符序列csq的类，不能追加整个序列。例如，如果csq是CharBuffer，那么要追加的子序列由缓冲区的位置（position）和限制（limit）定义。
		 返回Appendable的引用。
		 【Throws】：
			IOException 如果发生I/O错误。
	append(CharSequence csq, int start, int end):Appendable 
		csq - 追加子序列的字符序列。如果csq为null，那么追加“null”字符，就像csq包含四个字符“null”一样。
		start - 子序列中第一个字符的索引。
		end - 子序列中最后一个字符后面的字符的索引。
		将指定字符序列的子序列追加到此Appendable。
		当csq不为null时，对out.append(csq, start, end)形式的此方法的调用与以下调用的行为完全相同：
			 out.append(csq.subSequence(start, end));
		 返回Appendable的引用。
		【Throws】：
			IndexOutOfBoundsException 如果start或end为负，则start大于end，或者end大于csq.length（）。
			IOException 如果发生I/O错误。
	
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------		
附录：
	1、注：文档中的△符号表示覆盖重写方法，✘符号表示已淘汰的方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。	



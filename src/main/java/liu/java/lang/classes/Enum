----------------------------------------Enum<E extends Enum<E>>--------------------------------------------------------------------------------------------------------------
Enum<E extends Enum<E>>：枚举类。【Since:1.5】
	它是一个抽象类。是所有Java语言枚举类型的公共基类。更多关于枚举的信息，包括对编译器所合成的隐式声明方法的描述，可以在Java语言语言规范的第8.9节中找到。
	请注意，当使用枚举类型作为集合的类型或作为映射中键的类型时，可以使用专门的、高效的集合和映射实现。
	
	类定义	：public abstract class Enum<E extends Enum<E>> implements Comparable<E>, Serializable
	实现接口	：Comparable<E>, Serializable
------------------------------------------------------------------------------------------------------------------------------------------------------
Constructor Summary（构造器概要）：
	protected Enum(String name, int ordinal)
		唯一构造器。程序员无法调用此构造函数。它供编译器为响应枚举类型声明而发出的代码使用。
		name - 此枚举常量的名称，它是用于声明该常量的标识符。
		ordinal - 此枚举常量的序号（它在枚举声明中的位置，在该声明中，初始常量被指定为序号零）。
Method Summary（方法概要）：
	valueOf(Class<T> enumType,String name):static <T extends Enum<T>> T 
		<T> 要返回其常量的枚举类型
		返回具有指定名称的指定枚举类型的枚举常量。名称必须与用于在此类型中声明枚举常量的标识符完全匹配。（不允许使用外部空白字符。）
		请注意，对于特定的枚举类型t，可以使用该枚举上隐式声明的public static T valueOf(String)方法，而不是使用此方法从名称映射到相应的枚举常量。枚举类型的所有常量都可以通过调用该类型的隐式public static T[] values()方法来获取。
		【Throws】：
			IllegalArgumentException 如果指定的enumType没有具有指定name的常量，或者指定的类对象不表示枚举类型
			NullPointerException 如果enumType为null
	compareTo(E o):final int 
		△ 将此枚举与指定的o对象进行比较。返回负整数、零或正整数，因为此对象小于、等于或大于指定对象。枚举常量只能与同一枚举类型的其他枚举常量比较。此方法实现的自然顺序是声明常量的顺序。
	equals(Object other):final boolean 
		△ 如果指定的对象等于此枚举常量，则返回true。
	getDeclaringClass():final Class<E> 
		返回与此枚举常量的枚举类型相对应的类对象。两个枚举常量e1和e2在e1.getDeclaringClass() == e2.getDeclaringClass()时为同一枚举类型。（对于具有常量特定类体的枚举常量，此方法返回的值可能与Object.getClass()方法返回的值不同。）
	hashCode():final int 
		△ 返回此枚举常量的哈希代码。
	name():final String 
		返回此枚举常量的名称，与枚举声明中声明的名称完全相同。大多数程序员应该优先使用toString()方法，因为toString()方法可能返回一个更用户友好的名称。此方法主要设计用于特定的情况，在这种情况下，正确性取决于获得准确的名称，而名称在不同版本之间不会有所不同。
	ordinal():final int
		返回此枚举常量的序数（它在枚举声明中的位置，在该声明中，初始常量被指定为零的序数）。 大多数程序员对这种方法没有用处。它设计用于复杂的基于枚举的数据结构，如EnumSet和EnumMap。
	toString():String 
		△ 返回声明中包含的此枚举常量的名称。这个方法可以被重写，尽管它通常是不必要或不可取的。当存在更“程序员友好”的字符串形式时，枚举类型应重写此方法。
		

------------------------------------------------------------------------------------------------------------------------------------------------------
附录：
	1、注：文档中的△符号表示覆盖重写方法。	
	2、注：文档中的★符号表示抽象方法或者直接抛出UnsupportedOperationException异常的方法，总之没有实现具体功能代码的方法。
	3、varargs：可变参数
	4、<E extends Enum<E>>泛型说明：这是一个泛型，使用E作为类型参数。其次，对于E有上界限制，即E必须是Enum<E>的子类。E被识别为Enum的子类，这个情况相当于把一个子类或者自己当成参数，传入到自身，引起一些特别的语法效果。
	5、enum关键字：创建枚举类型要使用enum关键字，隐含了所创建的类型都是java.lang.Enum类的子类（java.lang.Enum是一个抽象类）。枚举类型符合通用模式（class Enum<E extends Enum<E>>）,而E表示枚举类型的名称。
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	